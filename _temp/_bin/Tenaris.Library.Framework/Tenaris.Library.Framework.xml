<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tenaris.Library.Framework</name>
    </assembly>
    <members>
        <member name="T:Tenaris.Library.Framework.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Properties.Resources.CouldntConvertValueThisToThat">
            <summary>
              Looks up a localized string similar to Couldn&apos;t convert the value {0} to {1}.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Properties.Resources.Factory_Create_Values_is_null_">
            <summary>
              Looks up a localized string similar to Values is null..
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Properties.Resources.Factory_Fill_Source_is_null_">
            <summary>
              Looks up a localized string similar to Source is null..
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Properties.Resources.Factory_Fill_Values_is_null">
            <summary>
              Looks up a localized string similar to Values is null.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Properties.Resources.ProcessSingleton_GetInstance_TypeAssemblyIsNull">
            <summary>
              Looks up a localized string similar to Type {0} cannot be used since its assembly is null.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Properties.Resources.SingletonInitializeNotCalledYet">
            <summary>
              Looks up a localized string similar to This singleton class &apos;{0}&apos; requires special initialization handling that was not done yet, and it cannot be created on-demand. Maybe you should not be using this class in the context you&apos;re using it? The most probable error is that this code is being executed in the wrong AppDomain (i.e. one that doesn&apos;t host the requested singleton type).
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Properties.Resources.SingletonInstanceAlreadyInitialized">
            <summary>
              Looks up a localized string similar to The singleton instance is already initialized..
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Properties.Resources.SingletonInstanceTypeInvalid">
            <summary>
              Looks up a localized string similar to The instance given (type: &apos;{0}&apos;) is not convertible to the required singleton type: &apos;{1}&apos;. In order to use this class the type parameter should be a class that inherits from {2}.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Properties.Resources.SpecifiedUnitNotFoundInDictionary">
            <summary>
              Looks up a localized string similar to The specified unit is not defined in the dictionary..
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.IReadOnlyDictionary`2">
            <summary>
            Provides the base interface for implement a generic read-only dictionary. 
            </summary>
            <typeparam name="TKey"> 
            The type of keys in the dictionary. 
            </typeparam> 
            <typeparam name="TValue"> 
            The type of values in the dictionary. 
            </typeparam> 
            <remarks> 
            <para> 
            An instance of the <b>ReadOnlyDictionary</b> generic class is 
            always read-only. A dictionary that is read-only is simply a 
            dictionary with a wrapper that prevents modifying the 
            dictionary; therefore, if changes are made to the underlying 
            dictionary, the read-only dictionary reflects those changes.  
            See <see cref="T:System.Collections.Generic.Dictionary`2"/> for a modifiable version of  
            this class. 
            </para> 
            <para> 
            <b>Notes to Implementers</b> This base class is provided to  
            make it easier for implementers to create a generic read-only 
            custom dictionary. Implementers are encouraged to extend this 
            base class instead of creating their own.  
            </para> 
            </remarks>
        </member>
        <member name="M:Tenaris.Library.Framework.IReadOnlyDictionary`2.ContainsKey(`0)">
            <summary>
            Determines whether the ReadOnlyDictionary contains the specified key.
            </summary>    
            <returns>    
            True if the ReadOnlyDictionary contains an element with the specified key; otherwise, false.    
            </returns>    
            <param name="key">The key to locate in the ReadOnlyDictionary</param>    
            <exception cref="T:System.ArgumentNullException">    
            Thrown when the key is null.    
            </exception>    
        </member>
        <member name="M:Tenaris.Library.Framework.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
            <summary>    
            Gets the value associated with the specified key.    
            </summary>    
            <param name="key">The key of the value to get.</param>    
            <param name="value">When this method returns, contains the value    
            associated with the specified key, if the key is found;    
            otherwise, the default value for the type of the value parameter.    
            This parameter is passed uninitialized.</param>    
            <returns>    
            <b>true</b> if the ReadOnlyDictionary contains an element with the specified key; otherwise, <b>false</b>.    
            </returns>    
        </member>
        <member name="M:Tenaris.Library.Framework.IReadOnlyDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>    
            Determines whether the ICollection contains a specific value.    
            </summary>    
            <param name="item">    
            The object to locate in the ICollection.    
            </param>    
            <returns>    
            <b>true</b> if item is found in the <b>ICollection</b>;     
            otherwise, <b>false</b>.    
            </returns>    
        </member>
        <member name="M:Tenaris.Library.Framework.IReadOnlyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>    
            Copies the elements of the ICollection to an Array, starting at a    
            particular Array index.     
            </summary>    
            <param name="array">The one-dimensional Array that is the   
            destination of the elements copied from ICollection.   
            The Array must have zero-based indexing.    
            </param>   
            <param name="arrayIndex">   
            The zero-based index in array at which copying begins.   
            </param>   
        </member>
        <member name="P:Tenaris.Library.Framework.IReadOnlyDictionary`2.Keys">
            <summary>Gets a collection containing the keys in the ReadOnlyDictionary{TKey,TValue}"&gt;</summary>   
            /// <value>A <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection"/>     
            containing the keys.</value>    
            <returns>A    
            <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection"/>    
            containing the keys in the    
            <see cref="T:System.Collections.Generic.Dictionary`2"></see>.    
            </returns>    
        </member>
        <member name="P:Tenaris.Library.Framework.IReadOnlyDictionary`2.Values">
            <summary>    
            Gets a collection containing the values of the ReadOnlyDictionary.    
            </summary>   
            <value>The collection of values.</value>   
        </member>
        <member name="P:Tenaris.Library.Framework.IReadOnlyDictionary`2.Item(`0)">
            <summary>    
            Gets or sets the value associated with the specified key.    
            </summary>    
            <returns>    
            The value associated with the specified key. If the specified key    
            is not found, a get operation throws a     
            <see cref="T:System.Collections.Generic.KeyNotFoundException" />,    
            and a set operation creates a new element with the specified key.    
            </returns>    
            <param name="key">The key of the value to get or set.</param>    
            <exception cref="T:System.ArgumentNullException">    
            Thrown when the key is null.    
            </exception>    
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">    
            The property is retrieved and key does not exist in the collection.    
            </exception>    
        </member>
        <member name="P:Tenaris.Library.Framework.IReadOnlyDictionary`2.Count">
            <summary>    
            Gets the number of key/value pairs contained in the ReadOnlyDictionary.    
            </summary>    
            <value>The number of key/value pairs.</value>    
            <returns>The number of key/value pairs contained in the ReadOnlyDictionary.</returns>    
        </member>
        <member name="P:Tenaris.Library.Framework.IReadOnlyDictionary`2.IsReadOnly">
            <summary>
            Gets a value indicating whether the dictionary is read-only.    
            This value will always be true.
            </summary>    
        </member>
        <member name="T:Tenaris.Library.Framework.ReadOnlyDictionary`2">
            <summary>
            Read-only dictionary implementation
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>    
            Initializes a new instance of the    
            <see cref="T:ReadOnlyDictionary`2" /> class that wraps    
            the supplied <paramref name="source"/>.    
            </summary>    
            <param name="source">The <see cref="T:IDictionary`2" />    
            that will be wrapped.</param>    
            <exception cref="T:System.ArgumentNullException">    
            Thrown when the dictionary is null.    
            </exception>    
        </member>
        <member name="M:Tenaris.Library.Framework.ReadOnlyDictionary`2.ContainsKey(`0)">
            <summary>Determines whether the ReadOnlyDictionary    
            contains the specified key.</summary>    
            <returns>    
            True if the ReadOnlyDictionary contains    
            an element with the specified key; otherwise, false.    
            </returns>    
            <param name="key">The key to locate in the ReadOnlyDictionary.</param>    
            <exception cref="T:System.ArgumentNullException">    
            Thrown when the key is null.    
            </exception>    
        </member>
        <member name="M:Tenaris.Library.Framework.ReadOnlyDictionary`2.Remove(`0)">
            <summary>    
            This method is not supported by the ReadOnlyDictionary.    
            </summary>    
            <param name="key">The key of the element to remove.</param>    
            <returns>    
            True if the element is successfully removed; otherwise, false.    
            </returns>    
        </member>
        <member name="M:Tenaris.Library.Framework.ReadOnlyDictionary`2.TryGetValue(`0,`1@)">
            <summary>    
            Gets the value associated with the specified key.    
            </summary>    
            <param name="key">The key of the value to get.</param>    
            <param name="value">When this method returns, contains the value    
            associated with the specified key, if the key is found;    
            otherwise, the default value for the type of the value parameter.    
            This parameter is passed uninitialized.</param>    
            <returns>    
            <b>true</b> if the ReadOnlyDictionary contains    
            an element with the specified key; otherwise, <b>false</b>.    
            </returns>    
        </member>
        <member name="M:Tenaris.Library.Framework.ReadOnlyDictionary`2.Add(`0,`1)">
            <summary>This method is not supported by the ReadOnlyDictionary.</summary>    
            <param name="key">    
            The object to use as the key of the element to add.</param>    
            <param name="value">    
            The object to use as the value of the element to add.</param>    
        </member>
        <member name="M:Tenaris.Library.Framework.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>This method is not supported by the ReadOnlyDictionary.</summary>    
            <param name="item">    
            The object to add to the ICollection.    
            </param>    
        </member>
        <member name="M:Tenaris.Library.Framework.ReadOnlyDictionary`2.Clear">
            <summary>This method is not supported by the ReadOnlyDictionary.</summary>    
        </member>
        <member name="M:Tenaris.Library.Framework.ReadOnlyDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>    
            Determines whether the ICollection contains a specific value.    
            </summary>    
            <param name="item">    
            The object to locate in the ICollection.    
            </param>    
            <returns>    
            <b>true</b> if item is found in the <b>ICollection</b>;     
            otherwise, <b>false</b>.    
            </returns>    
        </member>
        <member name="M:Tenaris.Library.Framework.ReadOnlyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>    
            Copies the elements of the ICollection to an Array, starting at a    
            particular Array index.     
            </summary>    
            <param name="array">The one-dimensional Array that is the   
            destination of the elements copied from ICollection.   
            The Array must have zero-based indexing.    
            </param>   
            <param name="arrayIndex">   
            The zero-based index in array at which copying begins.   
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.ReadOnlyDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>    
            This method is not supported by the ReadOnlyDictionary/>.    
            </summary>    
            <param name="item">The item to remove.</param>    
            <returns>    
            True if the element is successfully removed; otherwise, false.    
            </returns>    
        </member>
        <member name="M:Tenaris.Library.Framework.ReadOnlyDictionary`2.GetEnumerator">
            <summary>    
            Returns an enumerator that iterates through the collection.    
            </summary>    
            <returns>    
            A IEnumerator that can be used to iterate through the collection.    
            </returns>    
        </member>
        <member name="M:Tenaris.Library.Framework.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>    
            Returns an enumerator that iterates through a collection.    
            </summary>    
            <returns>    
            An IEnumerator that can be used to iterate through the collection.    
            </returns>    
        </member>
        <member name="P:Tenaris.Library.Framework.ReadOnlyDictionary`2.Keys">
            <summary>Gets a collection containing the keys in the ReadOnlyDictionary{TKey,TValue}.</summary>   
            /// <value>A <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection"/>     
            containing the keys.</value>    
            <returns>A    
            <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection"/>    
            containing the keys in the    
            <see cref="T:System.Collections.Generic.Dictionary`2"></see>.    
            </returns>    
        </member>
        <member name="P:Tenaris.Library.Framework.ReadOnlyDictionary`2.Values">
            <summary>    
            Gets a collection containing the values of the ReadOnlyDictionary.    
            </summary>   
            <value>The collection of values.</value>   
        </member>
        <member name="P:Tenaris.Library.Framework.ReadOnlyDictionary`2.Item(`0)">
            <summary>    
            Gets or sets the value associated with the specified key.    
            </summary>    
            <returns>    
            The value associated with the specified key. If the specified key    
            is not found, a get operation throws a     
            <see cref="T:System.Collections.Generic.KeyNotFoundException" />,    
            and a set operation creates a new element with the specified key.    
            </returns>    
            <param name="key">The key of the value to get or set.</param>    
            <exception cref="T:System.ArgumentNullException">    
            Thrown when the key is null.    
            </exception>    
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">    
            The property is retrieved and key does not exist in the collection.    
            </exception>    
        </member>
        <member name="P:Tenaris.Library.Framework.ReadOnlyDictionary`2.Count">
            <summary>    
            Gets the number of key/value pairs contained in the ReadOnlyDictionary</summary>    
            <value>The number of key/value pairs.</value>    
            <returns>The number of key/value pairs contained in the ReadOnlyDictionary</returns>    
        </member>
        <member name="P:Tenaris.Library.Framework.ReadOnlyDictionary`2.IsReadOnly">
            <summary>
            Gets a value indicating whether the dictionary is read-only.    
            This value will always be true.
            </summary>    
        </member>
        <member name="T:Tenaris.Library.Framework.ReadOnlyDictionaryDebugView`2">
            <summary>
            
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:Tenaris.Library.Framework.ReadOnlyDictionaryDebugView`2.#ctor(Tenaris.Library.Framework.ReadOnlyDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.ReadOnlyDictionaryDebugView`2"/> class.
            </summary>
            <param name="dictionary">The dictionary.</param>
        </member>
        <member name="P:Tenaris.Library.Framework.ReadOnlyDictionaryDebugView`2.Items">
            <summary>
            Gets the items.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Config.AppConfigConfigurationProvider">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Config.ConfigurationProvider">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Config.IConfigurationProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.IConfigurationProvider.GetSettings(System.String)">
            <summary>
            Devuelve el value asociado al key del AppSettings.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.IConfigurationProvider.GetConfiguration``1">
            <summary>
            
            </summary>
            <typeparam name="TConfiguration"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.IConfigurationProvider.GetConfiguration``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="TConfiguration"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.IConfigurationProvider.GetConfiguration(System.Type)">
            <summary>
            
            </summary>
            <param name="configType"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.IConfigurationProvider.GetConfiguration(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="configType"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.IConfigurationProvider.GetAllConfigurations``1">
            <summary>
            
            </summary>
            <typeparam name="TConfiguration"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.IConfigurationProvider.GetAllConfigurations(System.Type)">
            <summary>
            
            </summary>
            <param name="configType"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.IConfigurationProvider.GetConnectionString(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.IConfigurationProvider.GetConnectionStringSettings(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.IConfigurationProvider.GetConnectionStringSettings">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.IConfigurationProvider.Load(System.String)">
            <param name="fileName"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Config.IConfigurationProvider.LocalConfigurationProvider">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Config.IConfigurationProvider.NetConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.ConfigurationProvider.CreateConfigurationProvider">
            <summary>
            Crea el provider que corresponda según el tipo de aplicación (Web o no Web).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.ConfigurationProvider.Load(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.ConfigurationProvider.GetSettings(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.ConfigurationProvider.GetConfiguration``1">
            <summary>
            
            </summary>
            <typeparam name="TConfiguration"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.ConfigurationProvider.GetConfiguration``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="TConfiguration"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.ConfigurationProvider.GetAllConfigurations``1">
            <summary>
            
            </summary>
            <typeparam name="TConfiguration"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.ConfigurationProvider.GetConfiguration(System.Type)">
            <summary>
            
            </summary>
            <param name="configType"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.ConfigurationProvider.GetConfiguration(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="configType"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.ConfigurationProvider.GetAllConfigurations(System.Type)">
            <summary>
            
            </summary>
            <param name="configType"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.ConfigurationProvider.GetConnectionStringSettings">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.ConfigurationProvider.GetConnectionStringSettings(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.ConfigurationProvider.GetConnectionString(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Config.ConfigurationProvider.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Config.ConfigurationProvider.NetConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.AppConfigConfigurationProvider.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.AppConfigConfigurationProvider.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.AppConfigConfigurationProvider.Load(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.AppConfigConfigurationProvider.GetSettings(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.AppConfigConfigurationProvider.GetConfiguration(System.Type)">
            <summary>
            
            </summary>
            <param name="configType"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.AppConfigConfigurationProvider.GetConfiguration(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="configType"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.AppConfigConfigurationProvider.GetAllConfigurations(System.Type)">
            <summary>
            
            </summary>
            <param name="configType"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.AppConfigConfigurationProvider.GetConfigurationManager">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.AppConfigConfigurationProvider.GetConfiguration(System.Type,System.Configuration.Configuration)">
            <summary>
            
            </summary>
            <param name="configType"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.AppConfigConfigurationProvider.GetConfiguration(System.Type,System.String,System.Configuration.Configuration)">
            <summary>
            
            </summary>
            <param name="configType"></param>
            <param name="name"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Config.AppConfigConfigurationProvider.ConfigurationFileName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Config.AppConfigConfigurationProvider.ApplicationPath">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Config.CompositeConfigurationProvider">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.CompositeConfigurationProvider.#ctor(Tenaris.Library.Framework.Config.IConfigurationProvider)">
            <summary>
            
            </summary>
            <param name="local"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.CompositeConfigurationProvider.AddProvider(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.CompositeConfigurationProvider.AddProvider(Tenaris.Library.Framework.Config.IConfigurationProvider)">
            <summary>
            
            </summary>
            <param name="prov"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.CompositeConfigurationProvider.Load(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Config.CompositeConfigurationProvider.BaseDirectory">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Config.CompositeConfigurationProvider.NetConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Config.CompositeConfigurationProvider.LocalConfigurationProvider">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Config.CompositeConfigurationProviderConfiguration">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Config.CompositeConfigurationProviderConfiguration.BaseDirectory">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Config.CompositeConfigurationProviderConfiguration.Providers">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Config.ConfigurationProviderItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Config.ConfigurationProviderItem.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Config.ConfigurationProviderItem.FileName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Config.CompositeConfigurationProviderFactory">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Factory.Factory`1">
            <summary>
            Specific Factory for the given entity. Creates the instance with the configuration 
            received from the FactoryProvider.
            </summary>
            <typeparam name="TEntity">The type of entity to instantiate.</typeparam>
        </member>
        <member name="T:Tenaris.Library.Framework.Factory.FactoryBase">
            <summary>
            FactoryBase class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Factory.FactoryBase"/> class.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Factory.FactoryBase.sectionName">
            <summary>
            Section name.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Factory.FactoryBase.configurationProvider">
            <summary>
            Configuration provider.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Factory.FactoryBase.configuration">
            <summary>
            Configuration data.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryBase.Configure">
            <summary>
            This method requires SectionName to be a valid ConfigurationSection name in the configuration file.
            It searches this section and attempts to store it as the property Configuration.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryBase.Configure(System.Object)">
            <summary>
            Stores the ConfigurationSection provided in the property Configuration, and executes
            abstract method DoConfigure(), in case any child factories need to take action with the
            configuration.
            </summary>
            <param name="config">ConfigurationSection corresponding to the entity to instantiate.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryBase.Configure(System.String)">
            <summary>
            Executes the abstract method DeserializeConfiguration, expecting child factories to return 
            a valid ConfigurationSection, wich should be the entity instance configuration required.
            </summary>
            <param name="configString">The raw XML of the configuration for the entity instance.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryBase.DoConfigure">
            <summary>
            Allows child factories to take action on Configuration received.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryBase.DeserializeConfiguration(System.String)">
            <summary>
            Parses the raw XML of the configuration for the entity instance into a valid ConfigurationSection
            </summary>
            <param name="configString">The raw XML of the configuration section.</param>
            <returns>A ConfigurationSection corresponding to the entity to instantiate.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryBase.GetConfigurationType">
            <summary>
            Gets the configuration type.
            </summary>
            <returns>The type.</returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.FactoryBase.SectionName">
            <summary>
            Gets or sets the section name.
            If section name is provided. The factory will attempt to obtain the given 
            section by its name, and store it as the property Configuration.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.FactoryBase.ConfigurationProvider">
            <summary>
            Gets or sets the configuration provider.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.FactoryBase.Configuration">
            <summary>
            Gets or sets the configuration section corresponding to the entity to instantiatem, if any.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Factory.IFactory`1">
            <summary>
            Interface to allow abstraction from generic Factory classes. The FactoryProvider 
            should be the only class required to create a proper IFactory, with its
            configuration set.
            </summary>
            <typeparam name="TEntity">Factory type.</typeparam>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.IFactory`1.Create">
            <summary>
            Creates a new instance of TEntity based on the configuration provided.
            </summary>
            <returns>The appropiate TEntity instance with the configuration applied.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.Factory`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.Factory`1.Create">
            <summary>
            Creates a new entity.
            </summary>
            <returns>New entity.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.CompositeConfigurationProviderFactory.Create">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.CompositeConfigurationProviderFactory.GetConfigurationType">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.CompositeConfigurationProviderFactory.DoConfigure">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.CompositeConfigurationProviderFactory.DeserializeConfiguration(System.String)">
            <summary>
            
            </summary>
            <param name="configString"></param>
            <returns></returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Config.ConfigurationProviderSection">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Factory.FactoryConfiguration">
            <summary>
            This class represents and processes FactoryProvider configurations. Containing the type of factory to create, if it should be
            Singleton or not, and the section [optional] to search for the entity to instantiate configuration. If no section is provided
            the configuration is expected to be contained inside this FactoryProvider configuration.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryConfiguration.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Tenaris.Library.Framework.Factory.FactoryConfiguration"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Factory.FactoryConfiguration"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryConfiguration.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>
            Standard .Net method for ConfigurationElement deserealization. Maps this class properties with
            the Xml configuration file.
            </summary>
            <param name="reader">Provided by the Framework. Contains the raw Xml of the configuration.</param>
            <param name="serializeCollectionKey">Provided by the Framework.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryConfiguration.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>
            Standard .Net method for ConfigurationElement deserealization. Maps this class properties with
            the Xml configuration file.
            </summary>
            <param name="writer">Provided by the Framework, writes the properties of this configuration to the Xml file</param>
            <param name="elementName">Provided by the Framework, allows for a override of the element name of this configuration.</param>
            <returns>Whether it have been serialized.</returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.FactoryConfiguration.InstanceConfiguration">
            <summary>
            Gets the instance configuration. If no section name is provided, this property will contain the raw XML with what should be
            the configuration required for the entity instance.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.FactoryConfiguration.FactoryType">
            <summary>
            Gets the type (as Full Name) of the Factory to create.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.FactoryConfiguration.IsSingleton">
            <summary>
            Gets a value indicating whether the factory should be treated as a Singleton or not.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.FactoryConfiguration.SectionName">
            <summary>
            Gets the section name. If SectionName is provided, FactoryProvider will search for this section in order
            to send this configuration to the Factory that will create the entity instance.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Config.ConfigurationProviderSection.FactoryType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Config.WebConfigConfigurationProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.WebConfigConfigurationProvider.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.WebConfigConfigurationProvider.Load(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Config.WebConfigConfigurationProvider.GetConfigurationManager">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Config.WebConfigConfigurationProvider.ApplicationPath">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Context.Constants">
            <summary>
            Contants used by context information providers
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Context.Constants.AuditInfoKey">
            <summary>
            It is the value used in the internal dictionary that is sent in the remoting messaging context.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Context.PrincipalReference">
            <summary>
            Required for Security framework. It is used to change the principal to all created threads when logged user changed.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Context.PrincipalReference.#ctor(System.Security.Principal.IPrincipal)">
            <summary>
            Initializes a new instance of the PrincipalDecorator class.
            </summary>
            <param name="principal">Real princial that will be decorated.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Context.PrincipalReference.IsInRole(System.String)">
            <summary>
            Returns true if current principal is in the role.
            </summary>
            <param name="role">Teh role to be checked</param>
            <returns>True ir the user is in role. Otherwise false.</returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Context.PrincipalReference.Principal">
            <summary>
            Gets the real decorated principal
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Context.PrincipalReference.Identity">
            <summary>
            Gets the user identity
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Context.InvocationRequestInfoProvider">
            <summary>
            Provides the information sent by the client. It is extracted from remoting messaging context.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Context.IInvocationRequestInfoProvider">
            <summary>
            Represets a interface to get the invocation context information sent by client. It is used by the manager tha recibe the message.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Context.IInvocationRequestInfoProvider.GetInvocationInfo">
            <summary>
            Gets the invocation information.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Context.InvocationRequestInfoProvider.#ctor">
            <summary>
            It is nos possible to use the constructor because this class implements singleton pattern. To get an instance must use Instance property.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Context.InvocationRequestInfoProvider.GetInvocationInfo">
            <summary>
            Gets the invocation information sent by the client. It is used in manager side.
            </summary>
            <returns>InformationInfo sent by client.</returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Context.InvocationRequestInfoProvider.Instance">
            <summary>
            Gets the instance of provider. It implements a singleton. If there is an instance created the property returns this instance.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Context.InvocationInfoToSendProvider">
            <summary>
            Provides the invocation information to be sent by client side.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Context.IInvocationInfoToSendProvider">
            <summary>
            Represents a invocation information provider to be used by client side.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Context.IInvocationInfoToSendProvider.ProvideInvocationInfo">
            <summary>
            It returns the invocation information to be sent.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Context.InvocationInfoToSendProvider.#ctor">
            <summary>
            It is nos possible to use the constructor because this class implements singleton pattern. To get an instance must use Instance property.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Context.InvocationInfoToSendProvider.ProvideInvocationInfo">
            <summary>
            Return the invocation information to be sent.
            </summary>
            <returns>An instance of InvocationInfo.</returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Context.InvocationInfoToSendProvider.Instance">
            <summary>
            Gets the instance of provider. It implements a singleto. If there is an instance created the property returns this instance.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Context.InvocationInfo">
            <summary>
            Represets the client information sent in remoting messaging.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Context.InvocationInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Context.InvocationInfo"/> class.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Context.InvocationInfo.HostName">
            <summary>
            Gets or sets the name of the host that make the request.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Context.InvocationInfo.AssemblyName">
            <summary>
            Gets or sets the application name that make the request.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Context.InvocationInfo.AssemblyVersion">
            <summary>
            Gets or sets the version of the assembly that make the request.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Context.InvocationInfo.SecurityPrincipal">
            <summary>
            Gets and set the user principal that was logged in the appication that make the request.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Plugins.AvailabilityChangedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Plugins.AvailabilityChangedEventArgs.IsAvailable">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Plugins.IActiveComponent">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.IActiveComponent.Activate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.IActiveComponent.Deactivate">
            <summary>
            
            </summary>
        </member>
        <member name="E:Tenaris.Library.Framework.Plugins.IActiveComponent.ActivationChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:Tenaris.Library.Framework.Plugins.IActiveComponent.AvailabilityChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Plugins.IActiveComponent.IsAvailable">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Plugins.IActiveComponent.IsActive">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Plugins.IPlugin">
            <summary>
            TODO: Update summary.
            </summary>
            
        </member>
        <member name="T:Tenaris.Library.Framework.Plugins.IPlugin`1">
            <summary>
            
            </summary>
            <typeparam name="TContext"></typeparam>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.IPlugin`1.Configure(`0)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.Plugins.IPlugin`2">
            <summary>
            
            </summary>
            <typeparam name="TGlobalConfiguration"></typeparam>
            <typeparam name="TPluginConfiguration"></typeparam>
        </member>
        <member name="T:Tenaris.Library.Framework.Plugins.PluginConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Plugins.PluginConfigurationBase">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Plugins.PluginConfigurationBase.locker">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.PluginConfigurationBase.GetSingleInstance">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.PluginConfigurationBase.AddSingleInstance(System.Object)">
            <summary>
            
            </summary>
            <param name="instance"></param>
        </member>
        <member name="F:Tenaris.Library.Framework.Plugins.PluginConfigurationBase.configurationType">
            <summary>
            XML configuration.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Plugins.PluginConfigurationBase.configuration">
            <summary>
            Instance configuration.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.PluginConfigurationBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:InstanceBuilder"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.PluginConfigurationBase.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="!:InstanceBuilder"/> class.
            </summary>
            <param name="type">Instance type.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.PluginConfigurationBase.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="!:InstanceBuilder"/> class.
            </summary>
            <param name="config">Configuration data.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.PluginConfigurationBase.#ctor(System.Type,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="!:InstanceBuilder"/> class.
            </summary>
            <param name="type">instance type.</param>
            <param name="config">Configuration data.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.PluginConfigurationBase.SetConfiguration(System.Object)">
            <summary>
            Asigna la configuración de la instancia a crear.
            </summary>
            <param name="config">Instancia de la configuracion. Tiene que ser serializable en xml</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.PluginConfigurationBase.SetConfiguration(System.Object,System.String)">
            <summary>
            Asigna la configuración de la instancia a crear. 
            </summary>
            <param name="config">Instancia de la configuracion. Tiene que ser serializable en xml</param>
            <param name="rootName">Nombre a usar para el root de xml al serializar la configuración</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.PluginConfigurationBase.GetConfiguration(System.Type)">
            <summary>
            Obtiene la configuración para la instancia del elemento.
            </summary>
            <param name="typeOf">Tipo de la configuración</param>
            <returns>The configuration.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.PluginConfigurationBase.GetConfiguration``1">
            <summary>
            Gets the configuration.
            </summary>
            <typeparam name="TConfiguration">Configuration type.</typeparam>
            <returns>Resulting configuration.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.PluginConfigurationBase.CreateCanNotCreateDeserializeConfigurationException(System.Exception)">
            <summary>
            CreateCanNotCreateDeserializeConfigurationException exception.
            </summary>
            <param name="inner">Inner exception.</param>
            <returns>A new exception.</returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Plugins.PluginConfigurationBase.PluginType">
            <summary>
            Gets or sets the instance type.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Plugins.PluginConfigurationBase.IsPluginSingleton">
            <summary>
            Gets or sets the isSingleton property.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Plugins.PluginConfigurationBase.PluginConfiguration">
            <summary>
            Gets or sets the XML Configuration.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.PluginConfiguration.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.PluginConfiguration.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="type">Instance type.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.PluginConfiguration.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="config">Configuration data.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.PluginConfiguration.#ctor(System.Type,System.Object)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="type">instance type.</param>
            <param name="config">Configuration data.</param>
        </member>
        <member name="P:Tenaris.Library.Framework.Plugins.PluginConfiguration.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Plugins.PluginConfiguration.Type">
            <summary>
            Gets or sets the instance type.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Plugins.PluginConfiguration.IsSingleton">
            <summary>
            Gets or sets the isSingleton property.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Plugins.PluginConfiguration.Configuration">
            <summary>
            Gets or sets the XML Configuration.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Plugins.PluginConfigurationContext`2">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.PluginConfigurationContext`2.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Plugins.PluginConfigurationContext`2.#ctor(`0,`1)">
            <summary>
            
            </summary>
            <param name="globalConfig"></param>
            <param name="plugConfig"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Plugins.PluginConfigurationContext`2.ComponentConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Plugins.PluginConfigurationContext`2.PluginConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Remoting.MultipleEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.MultipleEventArgs.Senders">
            <summary>
            Gets or sets the senders.
            </summary>
            <value>
            The senders.
            </value>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.MultipleEventArgs.Events">
            <summary>
            Gets or sets the events.
            </summary>
            <value>
            The events.
            </value>
        </member>
        <member name="T:Tenaris.Library.Framework.Threading.PoolledWorker">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Threading.Worker">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.Worker.#ctor(Tenaris.Library.Framework.Threading.WorkerPool)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Threading.Worker"/> class.
            </summary>
            <param name="pool">The pool.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.Worker.#ctor(Tenaris.Library.Framework.Threading.WorkerPool,System.Boolean)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="pool">The pool.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.Worker.Start(Tenaris.Library.Framework.Threading.WorkerHandler)">
            <summary>
            Starts the specified start.
            </summary>
            <param name="start">The start.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.Worker.Start(Tenaris.Library.Framework.Threading.WorkerHandler,System.Object)">
            <summary>
            Starts the specified start.
            </summary>
            <param name="start">The start.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.Worker.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.Worker.DoWork">
            <summary>
            Does the work.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.Worker.RaiseStarted">
            <summary>
            Raises the started.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.Worker.RaiseStopped">
            <summary>
            Raises the stopped.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.Worker.DoChangeStatus(Tenaris.Library.Framework.Threading.WorkerStatus)">
            <summary>
            Does the change status.
            </summary>
            <param name="status">The status.</param>
        </member>
        <member name="E:Tenaris.Library.Framework.Threading.Worker.Started">
            <summary>
            Occurs when [started].
            </summary>
        </member>
        <member name="E:Tenaris.Library.Framework.Threading.Worker.Finished">
            <summary>
            Occurs when [finished].
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Threading.Worker.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:Tenaris.Library.Framework.Threading.Worker.FlowThreadContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Threading.Worker.Core">
            <summary>
            Gets or sets the core.
            </summary>
            <value>
            The core.
            </value>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.PoolledWorker.#ctor(Tenaris.Library.Framework.Threading.WorkerPool)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Threading.PoolledWorker"/> class.
            </summary>
            <param name="pool">The pool.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.PoolledWorker.#ctor(Tenaris.Library.Framework.Threading.WorkerPool,System.Boolean)">
            <summary>
            
            </summary>
            <param name="pool"></param>
            <param name="flowThreadContext"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.PoolledWorker.ChangeStatus(Tenaris.Library.Framework.Threading.WorkerStatus)">
            <summary>
            Changes the status.
            </summary>
            <param name="status">The status.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.PoolledWorker.Work(Tenaris.Library.Framework.Threading.WorkerCore)">
            <summary>
            Works the specified core.
            </summary>
            <param name="core">The core.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.PoolledWorker.GetCore">
            <summary>
            Gets the core.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.PoolledWorker.RemoveCore">
            <summary>
            Removes the core.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Threading.WorkerHandler">
            <summary>
            
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="T:Tenaris.Library.Framework.Threading.WorkerStatus">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Threading.WorkerStatus.Idle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Threading.WorkerStatus.Working">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Threading.WorkerStatus.Waiting">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.IUdpReceiverEvents">
            <summary>
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.IUdpReceiverEvents.DataReceived(Tenaris.Library.Framework.Tcp.UdpReceiver,System.Net.IPEndPoint,System.Byte[],System.Int32)">
            <summary>
            Data received.
            </summary>
            <param name="sender">TCP sender.</param>
            <param name="from"></param>
            <param name="buffer">Data buffer.</param>
            <param name="size"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.UdpReceiver">
            <summary>
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.UdpReceiver.#ctor(System.String)">
            <summary>
            </summary>
            <param name="address"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.UdpReceiver.#ctor(System.String,System.Int32)">
            <summary>
            </summary>
            <param name="address"></param>
            <param name="port"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.UdpReceiver.Activate(Tenaris.Library.Framework.Tcp.IUdpReceiverEvents)">
            <summary>
            </summary>
            <param name="listener"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.UdpReceiver.Deactivate">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.UdpReceiver.Write(System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="address"></param>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.UdpReceiver.Write(System.Net.IPEndPoint,System.Byte[],System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="dst"></param>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.UdpReceiver.Read(System.Net.IPEndPoint@,System.Byte[]@,System.Int32@)">
            <summary>
            </summary>
            <param name="from"></param>
            <param name="buffer"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.UdpReceiver.Address">
            <summary>
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.UdpReceiver.Port">
            <summary>
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.UdpReceiver.Socket">
            <summary>
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.UdpReceiver.Completer">
            <summary>
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.UdpReceiver.PacketCompletion">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Text.BasePattern">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Text.BasePattern.IsLike(System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Text.BasePattern.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Text.BasePattern.Pattern">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Text.LikePattern">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Text.LikePattern.#ctor(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="pattern"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.Text.WildcardPattern">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Text.WildcardPattern.#ctor(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="pattern"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.Tool">
            <summary>
            Tool class
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tool.Clone``1(``0)">
            <summary>
            Clones the specified source.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Engineering.HumanReadableValue">
            <summary>
             Converts from or to human readable values.
             Using a dictionary of unit name and divisor, this class
             calculates a human friendly value, unit pair (or vice-versa).
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Engineering.HumanReadableValue.#ctor(System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
             Initialize a new instance of HumanReadableValue
            </summary>
            <param name="unitDictionary">The dictionary with the definition of units.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Engineering.HumanReadableValue.ToHumanReadable(System.Double,System.String)">
            <summary>
             Converts a value in a given unit to a human friendly format. If unit is null
             then the BaseUnit is used as default.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="sourceUnit">The units of the given value.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Engineering.HumanReadableValue.FromHumanReadable(Tenaris.Library.Framework.Engineering.ValueUnitPair,System.String)">
            <summary>
             Given a human friendly value, it returns the value in the BaseUnit units.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="targetUnit">The target unit, if null the BaseUnit is used.</param>
            <returns></returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Engineering.HumanReadableValue.BaseUnit">
            <summary>
             The base unit of this instance.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Engineering.HumanReadableValue.UnitDictionary">
            <summary>
            Unit dictionary
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Engineering.TimeHumanReadableValue">
            <summary>
             Converts time units to a human readable form (that is, for instance,
             converts 120s to 2Min.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Engineering.TimeHumanReadableValue.#ctor">
            <summary>
             Instantiates a new class
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Engineering.ValueUnitPair">
            <summary>
             Represents a value with its unit.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Engineering.ValueUnitPair.#ctor(System.Double,System.String)">
            <summary>
             Initialize a new ValueUnitPair.
            </summary>
            <param name="value">The value.</param>
            <param name="unit">The unit of measure.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Engineering.ValueUnitPair.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Engineering.ValueUnitPair.Value">
            <summary>
             The value (expreseds in the given units)
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Engineering.ValueUnitPair.Unit">
            <summary>
             The units of this value.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.FormatProviders.StandardFormatProvider">
            <summary>
             Provides standard formatters for strings and special objects.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Framework.Singleton`1">
            <summary>
            Singleton class, only permits the existance of a single instance of the specified type <typeparamref name="TSingletonClass"/>/>
            </summary>
            <typeparam name="TSingletonClass">
            The type of the class to instantiate
            </typeparam>
        </member>
        <member name="M:Tenaris.Library.Framework.Framework.Singleton`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Framework.Singleton`1"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Framework.Singleton`1.Initialize(`0)">
            <summary>
            Initializes the singleton with the provided instance <paramref name="value"/>.
            </summary>
            <param name="value">
            The instance to assign as *the* singleton instance.
            </param>
        </member>
        <member name="P:Tenaris.Library.Framework.Framework.Singleton`1.Instance">
            <summary>
            Gets the single Instance of the specified Singleton class
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Framework.Singleton`1.RequiresInitialization">
            <summary>
            Gets a value indicating whether the given class requires special initialization handling and just calling its default constructor it's not enough.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.FormatProviders.StandardFormatProvider.GetFormat(System.Type)">
            <summary>
            
            </summary>
            <param name="formatType"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.FormatProviders.StandardFormatProvider.Format(System.String,System.Object,System.IFormatProvider)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="arg"></param>
            <param name="formatProvider"></param>
            <returns></returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Framework.CrossDomainHelpers">
            <summary>
            Cross domain helper functions
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Framework.CrossDomainHelpers.CreateInstance``1(System.AppDomain,System.Type)">
            <summary>
            Creates a new instance of a singleton class
            </summary>
            <typeparam name="TSingletonClass"></typeparam>
            <param name="host"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Framework.CrossDomainHelpers.GetHost(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Framework.CrossDomainHelpers.FindInstance``1(System.AppDomain,System.Type)">
            <summary>
            
            </summary>
            <typeparam name="TSingletonClass"></typeparam>
            <param name="host"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Framework.CrossDomainSingleton`1">
            <summary>
            Helper class to allow definition of singleton instances across AppDomain boundaries
            </summary>
            <typeparam name="TSingletonClass">The class type which needs to be singleton. T has to inherit from MarshalByRefObject.</typeparam>
        </member>
        <member name="M:Tenaris.Library.Framework.Framework.CrossDomainSingleton`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Framework.CrossDomainSingleton`1"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Framework.CrossDomainSingleton`1.InitializeLifetimeService">
            <summary>
            Overrides the lifetime service initializer so the object is never disposed by GC.
            </summary>
            <returns>
            Always null.
            </returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Framework.CrossDomainSingleton`1.Instance">
            <summary>
            Gets the single possible instance of the class T
            </summary>
            <exception cref="T:Tenaris.Library.Framework.Utility.AppDomain.InvalidTypeException">
             Raised when the type T comes from an invalid assembly, 
              i.e. when Type.Assembly returns null or when the returned assembly has null FullName. 
            </exception>
        </member>
        <member name="P:Tenaris.Library.Framework.Framework.CrossDomainSingleton`1.RequiresInitialization">
            <summary>
            Gets a value indicating whether the given class requires special initialization handling and just calling its default constructor it's not enough.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Framework.RemotableSingleton`1">
            <summary>
            Singleton class, only permits the existence of a single instance of the specified type TSingletonClass, allows it to be remotable.
            </summary>
            <typeparam name="TSingletonClass">
            The type of the class to instantiate.
            </typeparam>
        </member>
        <member name="M:Tenaris.Library.Framework.Framework.RemotableSingleton`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Framework.RemotableSingleton`1"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Framework.RemotableSingleton`1.InitializeLifetimeService">
            <summary>
            Overrides the lifetime service initializer so the object is never dispose by GC.
            </summary>
            <returns>
            Always null.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Framework.RemotableSingleton`1.Initialize(`0)">
            <summary>
            Initializes the singleton with the provided instance <paramref name="value"/>.
            </summary>
            <param name="value">
            The instance to assign as *the* singleton instance.
            </param>
        </member>
        <member name="P:Tenaris.Library.Framework.Framework.RemotableSingleton`1.Instance">
            <summary>
            Gets the single Instance of this Singleton.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Framework.RemotableSingleton`1.RequiresInitialization">
            <summary>
            Gets a value indicating whether the given class requires special initialization handling and just calling its default constructor it's not enough.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Framework.RequiresInitializationAttribute">
            <summary>
            An attribute used as a indication that an static class singleton requires initialization code to be executed 
            prior to it being available to the outside world.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Framework.RequiresInitializationAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Framework.RequiresInitializationAttribute"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Framework.RequiresInitializationAttribute.GetInstance(System.Reflection.MemberInfo)">
            <summary>
            Tries to obtain the single instance of this attribute in the given type.
            </summary>
            <param name="element">
            The element on which the attribute is being checked.
            </param>
            <returns>
            The attribute instance, if present, or null when not.
            </returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Framework.RequiresInitializationAttribute.FailOnDefaultCreationAttempt">
            <summary>
            Gets or sets a value indicating whether an exception should be raised when the singleton is accessed and it wasn't initialized yet (default = true).
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Framework.SingletonMaker`1">
            <summary>
            Provides as service the creation of singleton instance of any class given.
            </summary>
            <typeparam name="TSingletonClass">
            A type representing a class that is required to be singleton.
            </typeparam>
        </member>
        <member name="M:Tenaris.Library.Framework.Framework.SingletonMaker`1.Initialize(`0)">
            <summary>
            Initializes the singleton with the provided instance <paramref name="value"/>.
            </summary>
            <param name="value">
            The instance to assign as *the* singleton instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
            When <paramref name="value"/> == null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            When <see cref="F:Tenaris.Library.Framework.Framework.SingletonMaker`1.instance"/> != null.
            </exception>
        </member>
        <member name="M:Tenaris.Library.Framework.Framework.SingletonMaker`1.Initialize(System.Object)">
            <summary>
            Initializes the singleton with the provided instance <paramref name="value"/>.
            </summary>
            <param name="value">
            The instance to assign as *the* singleton instance.
            </param>
            <exception cref="T:System.ArgumentNullException">
            When <paramref name="value"/> == null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            When <see cref="F:Tenaris.Library.Framework.Framework.SingletonMaker`1.instance"/> != null.
            </exception>
        </member>
        <member name="M:Tenaris.Library.Framework.Framework.SingletonMaker`1.InvalidCast(System.Type)">
            <summary>
            Throws an <see cref="T:System.InvalidCastException"/> indicating that the given instance type couldn't be converted to TSingletonClass type.
            </summary>
            <param name="type">
            The instance type received.
            </param>
            <returns>
            It never returns anything since it's sole purpose is to raise an exception.
            </returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Framework.SingletonMaker`1.Instance">
            <summary>
            Gets the single Instance of the specified Singleton class
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Framework.SingletonMaker`1.IsInitialized">
            <summary>
            Gets a value indicating whether the singleton is already initialized.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Framework.SingletonMaker`1.RequiresInitialization">
            <summary>
            Gets a value indicating whether the given class requires special initialization handling and just calling its default constructor it's not enough.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Helpers.ConvertHelper">
            <summary>
            Converter helper
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Helpers.ConvertHelper.IsDouble(System.String)">
            <summary>
            Check if  value is double
            </summary>
            <param name="value">Value to be checked</param>
            <returns>True if value is double</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Helpers.ConvertHelper.ToBoolean(System.String)">
            <summary>
            Convert value to bool
            </summary>
            <param name="value">Value to be converted</param>
            <returns>The converted value</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Helpers.ConvertHelper.ToDouble(System.String)">
            <summary>
            Convert string value to double
            </summary>
            <param name="value">Value to be converted</param>
            <returns>The converted value</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Helpers.ConvertHelper.ToInt32(System.String)">
            <summary>
            Convert string value to int
            </summary>
            <param name="value">Value to be converted</param>
            <returns>The converted value</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Helpers.ConvertHelper.ToInt16(System.String)">
            <summary>
            Convert string value to short
            </summary>
            <param name="value">Value to be converted</param>
            <returns>The converted value</returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Diagnostics.ProcessExtensionMethod">
            <summary>
            Process extension methods.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Diagnostics.ProcessExtensionMethod.CanStart(System.Diagnostics.Process)">
            <summary>
            Verifies if a previous instance of the process is already running. 
            </summary>
            <param name="process">
            The process on which to check for previous instances.
            </param>
            <returns>
            True if it is ok to keep the process running or false if the process should exit.
            </returns>    
        </member>
        <member name="M:Tenaris.Library.Framework.Diagnostics.ProcessExtensionMethod.CanStart(System.Diagnostics.Process,System.Int32)">
            <summary>
            Verifies if previous instances of the process are already running.
            </summary>
            <param name="process">
            The process on which to check for previous instances.
            </param>
            <param name="maxInstances">
            The number of max instances.
            </param>
            <returns>
            True if it is ok to keep the process running or false if the process should exit.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Diagnostics.ProcessExtensionMethod.CanStart(System.Diagnostics.Process,System.Int32,System.Boolean)">
            <summary>
            Exit the current process if previous ones are already running.
            </summary>
            <param name="process">
            The process on which to check for previous instances.
            </param>
            <param name="maxInstances">
            The number of max instances.
            </param>
            <param name="autoKill">
            Whether to kill or not the current process if result is false.
            </param>
            <returns>
            True if it is ok to keep the process running or false if the process should exit.
            </returns>    
        </member>
        <member name="T:Tenaris.Library.Framework.Factory.FactoryProvider">
            <summary>
            Main Factory class. Generates Factories for any given entity using the configuration
            specified.
            FactoryProvider internally stores all Factories created as Singleton.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryProvider.CreateFactory``1(System.String)">
            <summary>
            Returns an Instance (new or singleton, depending on configuration) of the corresponding Factory,
            based on the specified configuration.
            </summary>
            <typeparam name="TEntity">The type of Entity to create with the returned factory.</typeparam>
            <param name="name">The name of the configuration section to read, in order to create the appropiate
            factory and entity.</param>
            <returns>An instance of a Factory, wich may be new or singleton.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryProvider.ExistsFactory``1">
            <summary>
            Returns if the factory configuration for the Entity exist in the configuration file.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns>A boolean value</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryProvider.TryCreateFactory``1(Tenaris.Library.Framework.Factory.IFactory{``0}@)">
            <summary>
            Returns an Instance (new or singleton, depending on configuration) of the corresponding Factory that create entities,
            of type TEntity. Return the first that it find.
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="factory"></param>
            <returns>A boolean value and an instance of a Factory, wich may be new or singleton.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryProvider.CreateFactory``1">
            <summary>
            Returns an Instance (new or singleton, depending on configuration) of the corresponding Factory that create entities,
            of type TEntity. Return the first that it find.
            </summary>
            <returns>An instance of a Factory, wich may be new or singleton.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryProvider.CreateEntity``1(System.String)">
            <summary>
            Obtiene el factory de tipo IFactory e invoca al Create.
            </summary>
            <typeparam name="TEntity">Factory type.</typeparam>
            <param name="factoryName">Name of the factory</param>
            <returns>A new object reference.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryProvider.CreateEntity``1">
            <summary>
            Obtiene el factory de tipo IFactory que crea instancias del tipo TEntity. Devuelve el primer factory que encuentra.
            </summary>
            <typeparam name="TEntity">Factory type.</typeparam>
            <param name="factoryName">Name of the factory</param>
            <returns>A new object reference.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryProvider.CreateEntity(System.String)">
            <summary>
            Obtiene el factory de nombre factoryName e invoca al create por reflection evitando el casteo, ya que no se conoce el tipo de la entidad a crear
            </summary>
            <param name="factoryName">Factory name.</param>
            <returns>New entity</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryProvider.GetConfiguration(System.String)">
            <summary>
            Gets the factory configuration.
            </summary>
            <param name="name">Configuration name.</param>
            <returns>Factory configuration.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryProvider.GetFactoryConfigurationForEntity(System.Type)">
            <summary>
            Gets the factory configuration.
            </summary>
            <param name="entityType">Entity Type that factory creates.</param>
            <returns>Factory configuration.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.FactoryProvider.DoCreateFactory(System.String)">
            <summary>
            Creates factory.
            </summary>
            <param name="name">Factory name.</param>
            <returns>Factory instance.</returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.FactoryProvider.Instance">
            <summary>
            Gets the singleton accesor to FactoryProvider.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.FactoryProvider.ConfigurationProvider">
            <summary>
            Instance of the Configuration Provider.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.FactoryProvider.FileName">
            <summary>
            Gets or sets the filename.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.FactoryProvider.Configurations">
            <summary>
            Gets the dictionary with all the configurations stored in this factory. Each configuration
            is created and stored the first time it's read. Even if different instances of the same
            Factory are required, configurations are reused.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.FactoryProvider.Factories">
            <summary>
            Gets the dictionary containing the list of factories created. If a factory is requested as
            Singleton, this dictionary stores such a factory. If a factory of the same type is then requested
            to the FactoryProvider, it will return the instance stored in this dictionary.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Factory.IConfigurable">
            <summary>
            IConfigurable interface.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.IConfigurable.Configure(System.Object)">
            <summary>
            Configures the class.
            </summary>
            <param name="config">Configuration object.</param>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.IConfigurable.ConfigurationType">
            <summary>
            Gets the configuration type.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Factory.IGenericFactory">
            <summary>
            IGenericFactory interface.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.IGenericFactory.Create``1">
            <summary>
            Creates a new contract.
            </summary>
            <typeparam name="TContract">Contract type.</typeparam>
            <returns>New contract.</returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Factory.InstanceBuilder">
            <summary>
            Crea instancias de tipo IConfigurable y las configura. La configuración tiene que ser serializable en XML y es el nodo hijo de esta clase.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Factory.InstanceBuilder.type">
            <summary>
            Instance type.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Factory.InstanceBuilder.typeName">
            <summary>
            Instance name.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Factory.InstanceBuilder.xmlConfiguration">
            <summary>
            XML configuration.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Factory.InstanceBuilder.configuration">
            <summary>
            Instance configuration.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Factory.InstanceBuilder"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Factory.InstanceBuilder"/> class.
            </summary>
            <param name="type">Instance type.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Factory.InstanceBuilder"/> class.
            </summary>
            <param name="config">Configuration data.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.#ctor(System.Type,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Factory.InstanceBuilder"/> class.
            </summary>
            <param name="type">instance type.</param>
            <param name="config">Configuration data.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.SetConfiguration(System.Object)">
            <summary>
            Asigna la configuración de la instancia a crear.
            </summary>
            <param name="config">Instancia de la configuracion. Tiene que ser serializable en xml</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.SetConfiguration(System.Object,System.String)">
            <summary>
            Asigna la configuración de la instancia a crear. 
            </summary>
            <param name="config">Instancia de la configuracion. Tiene que ser serializable en xml</param>
            <param name="rootName">Nombre a usar para el root de xml al serializar la configuración</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.GetConfiguration(System.Type)">
            <summary>
            Obtiene la configuración para la instancia del elemento.
            </summary>
            <param name="typeOf">Tipo de la configuración</param>
            <returns>The configuration.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.GetConfiguration``1">
            <summary>
            Gets the configuration.
            </summary>
            <typeparam name="TConfiguration">Configuration type.</typeparam>
            <returns>Resulting configuration.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.Create">
            <summary>
            Crea la instancia y la configura.
            </summary>
            <returns>Create a new object.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.Create(System.Object[])">
            <summary>
            Crea la instancia y la configura.
            </summary>
            <param name="constructorParameters">Connstructor parameters.</param>
            <returns>New object.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.Create``1">
            <summary>
            Crea la instancia y la configura.
            </summary>
            <typeparam name="TInstance">Factory type.</typeparam>
            <returns>A new instance.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.Create``1(System.Object[])">
            <summary>
            Crea la instancia y la configura.
            </summary>
            <typeparam name="TInstance">Instance type.</typeparam>
            <param name="constructorParameters">Constructor parameters,</param>
            <returns>A new instance.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.GetSchema">
            <summary>
            Gets an XML schema.
            </summary>
            <returns>The XML schema.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads from an XML.
            </summary>
            <param name="reader">XML reader.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes XML configuration.
            </summary>
            <param name="writer">XML writer.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.SetType(System.Xml.XmlReader)">
            <summary>
            Sets the type.
            </summary>
            <param name="reader">XML reader.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.SetConfiguration(System.Xml.XmlReader)">
            <summary>
            sets a configuration.
            </summary>
            <param name="reader">XML reader.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.CreateNullInstanceConfigurationTypeException(System.Exception)">
            <summary>
            CreateNullInstanceConfigurationTypeException exception.
            </summary>
            <param name="inner">Inner exception.</param>
            <returns>A new exception.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.CreateCanNotCreateDeserializeConfigurationException(System.Exception)">
            <summary>
            CreateCanNotCreateDeserializeConfigurationException exception.
            </summary>
            <param name="inner">Inner exception.</param>
            <returns>A new exception.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.InstanceBuilder.CreateInstanceNotImplementIConfigurableInterfaceException(System.Exception)">
            <summary>
            CreateInstanceNotImplementIConfigurableInterfaceException exception.
            </summary>
            <param name="inner">Inner exception.</param>
            <returns>A new exception.</returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.InstanceBuilder.Type">
            <summary>
            Gets or sets the instance type.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.InstanceBuilder.TypeName">
            <summary>
            Gets or sets the type name.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.InstanceBuilder.XmlConfiguration">
            <summary>
            Gets or sets the XML Configuration.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.InstanceBuilder.InstanceTypeElementName">
            <summary>
            Gets the instance type name.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Factory.RemotingConfiguration">
            <summary>
            Provides means to replace the Remoting configuration and contains the Url to
            create the proxy to a published object.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.RemotingConfiguration.IsReadOnly">
            <summary>
            Indicates if it is readonly.
            </summary>
            <returns>A result flag.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.RemotingConfiguration.GetSchema">
            <summary>
            Check Framework Documentation.
            </summary>
            <returns>XML schema.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.RemotingConfiguration.ReadXml(System.Xml.XmlReader)">
            <summary>
            Check Framework Documentation.
            </summary>
            <param name="reader">XML reader.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.RemotingConfiguration.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Check Framework Documentation.
            </summary>
            <param name="writer">Xml writer.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.RemotingConfiguration.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>
            Check Framework Documentation.
            </summary>
            <param name="reader">Object reader.</param>
            <param name="serializeCollectionKey">Whether to serialize collection key or not.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.RemotingConfiguration.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>
            Check Framework Documentation.
            </summary>
            <param name="writer">XML writer.</param>
            <param name="elementName">Element name.</param>
            <returns>XML serialized object.</returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.RemotingConfiguration.Url">
            <summary>
            Gets or sets the Url for the proxy.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Factory.RemotingFactory`1">
            <summary>
            Creates a proxy to the TEntity published in the Url provided in the configuration.
            </summary>
            <typeparam name="TEntity">Remoteing type.</typeparam>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.RemotingFactory`1.Create">
            <summary>
            Creates the proxy. Prior to creating the proxy, if FileName was provided in the configuration
            the RemotingConfiguration.Configure is called with the FileName as parameter. Otherwise the same
            method is called, with AppDomain.CurrentDomain.SetupInformation.ConfigurationFile as parameter.
            </summary>
            <returns>The proxy instance corresponding to the object published in the given Url</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.RemotingFactory`1.DeserializeConfiguration(System.String)">
            <summary>
            Deserializes the Xml configuration provided by the FactoryProvider.
            </summary>
            <param name="configString">The raw XML of the configuration section corresponding to this TEntity proxy.</param>
            <returns>Deserialized object.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.RemotingFactory`1.DoConfigure">
            <summary>
            Stores the configuration as a RemotingConfiguration for ease of use.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.RemotingFactory`1.RemotingConfiguration">
            <summary>
            Gets the remoting configuration.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Factory.RemotingFactoryConfigurationSection">
            <summary>
            RemotingFactoryConfigurationSection class.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Factory.RemotingFactoryConfigurationSection.instanceType">
            <summary>
            Instance type.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Factory.RemotingFactoryConfigurationSection.url">
            <summary>
            U R L.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.RemotingFactoryConfigurationSection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Factory.RemotingFactoryConfigurationSection"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Factory.RemotingFactoryConfigurationSection.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>
            Standard .Net method for ConfigurationElement deserealization. Maps this class properties with
            the Xml configuration file.
            </summary>
            <param name="reader">Provided by the Framework. Contains the raw Xml of the configuration.</param>
            <param name="serializeCollectionKey">Provided by the Framework.</param>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.RemotingFactoryConfigurationSection.InstanceType">
            <summary>
            Gets or sets the instance type.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.RemotingFactoryConfigurationSection.Url">
            <summary>
            Gets or sets the URL.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.RemotingFactoryConfigurationSection.FactoryType">
            <summary>
            Gets or sets the factory type.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Factory.RemotingFactoryConfigurationSection.InstanceConfiguration">
            <summary>
            Gets or sets the instance configuration.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.FireAdditionalFunction">
            <summary>
            The additional function event handler.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            Additional function event args.
            </param>
        </member>
        <member name="T:Tenaris.Library.Framework.Helpers.XmlSerializerHelper">
            <summary>
            XmlSerializerHelper class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Helpers.XmlSerializerHelper.GetElementName(System.String)">
            <summary>
            Gets the name of the element.
            </summary>
            <param name="xml">The XML.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Helpers.XmlSerializerHelper.Serialize``1(System.Object,System.Type[])">
            <summary>
            Serializes data.
            </summary>
            <typeparam name="TType">Data type.</typeparam>
            <param name="data">Data to serialize.</param>
            <param name="knownTypes">Known types.</param>
            <returns>Result value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Helpers.XmlSerializerHelper.Serialize(System.Object,System.Type[])">
            <summary>
            Serializes data.
            </summary>
            <param name="data">Data to serialize.</param>
            <param name="knownTypes">Known types.</param>
            <returns>Result value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Helpers.XmlSerializerHelper.Serialize``1(System.Object,System.String,System.Type[])">
            <summary>
            Serializes data.
            </summary>
            <typeparam name="TType">Data type.</typeparam>
            <param name="data">Data to serialize.</param>
            <param name="elementName">XML element name.</param>
            <param name="knownTypes">Known types.</param>
            <returns>Result value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Helpers.XmlSerializerHelper.Serialize(System.Object,System.String,System.Type[])">
            <summary>
            Serializes data.
            </summary>
            <param name="data">Data to serialize.</param>
            <param name="elementName">XML element name.</param>
            <param name="knownTypes">Known types.</param>
            <returns>Result value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Helpers.XmlSerializerHelper.Deserialize``1(System.String,System.Type[])">
            <summary>
            Deserializes data.
            </summary>
            <typeparam name="TType">Data type.</typeparam>
            <param name="xml">Xml data.</param>
            <param name="knownTypes">Known types.</param>
            <returns>Result value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Helpers.XmlSerializerHelper.Deserialize(System.Type,System.String,System.Type[])">
            <summary>
            Deserializes data.
            </summary>
            <param name="type">Data type.</param>
            <param name="xml">XML data.</param>
            <param name="knownTypes">Known types.</param>
            <returns>Return value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Helpers.XmlSerializerHelper.Deserialize``1(System.String,System.String,System.Type[])">
            <summary>
            Deserializes data.
            </summary>
            <typeparam name="TType">Data type.</typeparam>
            <param name="xml">XML data.</param>
            <param name="elementName">Element name.</param>
            <param name="knownTypes">Known types.</param>
            <returns>Return value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Helpers.XmlSerializerHelper.Deserialize(System.Type,System.String,System.String,System.Type[])">
            <summary>
            Deserializes data.
            </summary>
            <param name="type">Data type.</param>
            <param name="elementName">Element name.</param>
            <param name="xml">XML data.</param>
            <param name="knownTypes">Known types.</param>
            <returns>Return value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Helpers.XmlSerializerHelper.DoSerialize(System.Object,System.String,System.Type,System.Type[])">
            <summary>
            Executes the serialization.
            </summary>
            <param name="data">Data to serialize.</param>
            <param name="elementName">XML element name.</param>
            <param name="type">Data type.</param>
            <param name="knownTypes">Known types.</param>
            <returns>Result value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Helpers.XmlSerializerHelper.DoDeserialize(System.Type,System.String,System.String,System.Type[])">
            <summary>
            Executes the deserialization.
            </summary>
            <param name="type">Data type.</param>
            <param name="elementName">Element name.</param>
            <param name="xml">XML data.</param>
            <param name="knownTypes">Known types.</param>
            <returns>Return value.</returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Interop.Connection`1">
            <summary>
            A connection to a COM ConnectionPoint.
            </summary>
            <typeparam name="TSinkType">
            The type of the sink that will recieve the events.
            </typeparam>
        </member>
        <member name="T:Tenaris.Library.Framework.Interop.IConnection`1">
            <summary>
            Generic version of the IConnection interface.
            </summary>
            <typeparam name="TSinkType">Type of the event sink.
            </typeparam>
        </member>
        <member name="T:Tenaris.Library.Framework.Interop.IConnection">
            <summary>
            A connection between two COM objects.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.IConnection.Disconnect">
            <summary>
            Closes the connection.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.IConnection.Cookie">
            <summary>
            Gets connection cookie.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.IConnection.Source">
            <summary>
            Gets connection source.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.IConnection.IsConnected">
            <summary>
            Gets a value indicating whether the connection is connected.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.IConnection.IsDisconnected">
            <summary>
            Gets a value indicating whether the connection is disconnected.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.IConnection.Iid">
            <summary>
            Gets Iid of the COM interface associated with the connection.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.IConnection.Sink">
            <summary>
            Gets the sink of the events.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.IConnection`1.Sink">
            <summary>
            Gets the event sink.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.Connection`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Interop.Connection`1"/> class.
            </summary>
            <param name="sink">The sink.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.Connection`1.Disconnect">
            <summary>
            Disconnects from the connection point.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.Connection`1.Dispose">
            <summary>
            Disposes the event sink.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.Connection`1.Source">
            <summary>
            Gets the event source.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.Connection`1.Iid">
            <summary>
            Gets the Iid of the connected COM interface.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.Connection`1.Cookie">
            <summary>
            Gets the cookie associated with this connection.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.Connection`1.IsConnected">
            <summary>
            Gets a value indicating whether the connection is connected.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.Connection`1.IsDisconnected">
            <summary>
            Gets a value indicating whether the connection is disconnected.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.Connection`1.Tenaris#Library#Framework#Interop#IConnection#Sink">
            <summary>
            Gets a non generic version of the sink.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.Connection`1.Sink">
            <summary>
            Gets the event sink that will recieve COM events.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Interop.Events">
            <summary>
            A helper class that encapsulates the use of COM ConnectionPoints.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Interop.Events.NullCookie">
            <summary>
            A constant representing a null cookie.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.Events.Connect(System.Object,System.Guid,System.Object,System.Int32@)">
            <summary>
            Connects a sink to a COM ConnectionPoint.
            </summary>
            <param name="source">
            The COM source object.
            </param>
            <param name="iid">
            The iid of the interface to connect to.
            </param>
            <param name="sink">
            The sink that will receive the events.
            </param>
            <param name="cookie">
            The cookie linked to this connection.
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.Events.Connect(System.Object,System.Type,System.Object,System.Int32@)">
            <summary>
            Connects the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="type">The type.</param>
            <param name="sink">The sink.</param>
            <param name="cookie">The cookie.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.Events.Disconnect(System.Object,System.Guid,System.Int32@)">
            <summary>
            Discconects a connection to a COM ConnectionPoint.
            </summary>
            <param name="source">
            The source object.
            </param>
            <param name="iid">
            The iid of the COM interface.
            </param>
            <param name="cookie">
            The cookie associated with this connection.
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.Events.Disconnect(System.Object,System.Type,System.Int32@)">
            <summary>
            Disconnects the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="type">The type.</param>
            <param name="cookie">The cookie.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.Events.Connect``1(``0)">
            <summary>
            Connects the sink to its associated source.
            </summary>
            <param name="sink">
            The sink that will receive the events.
            </param>
            <typeparam name="TSink">
            The type of the sink.
            </typeparam>
            <returns>
            The newly created connection.
            </returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Interop.ISink">
            <summary>
            Represents a sink of COM ConnectionPoint events.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.ISink.Source">
            <summary>
            Gets event source.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.ISink.Iid">
            <summary>
            Gets the Iid associated with this event.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Interop.ISink`1">
            <summary>
            Generic version of the ISink interface.
            </summary>
            <typeparam name="TSourceType">
            The type of the source.
            </typeparam>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.ISink`1.Source">
            <summary>
            Gets the event source.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Interop.Sink`1">
            <summary>
            A sink of COM Events.
            </summary>
            <typeparam name="TSourceType">The source type.
            </typeparam>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.Sink`1.#ctor(`0,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Interop.Sink`1"/> class.
            </summary>
            <param name="source">
            The source.
            </param>
            <param name="eventsIntf">
            The events intf.
            </param>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.Sink`1.Tenaris#Library#Framework#Interop#ISink#Source">
            <summary>
            Gets Source.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.Sink`1.Iid">
            <summary>
            Gets the Iid of the COM interface.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.Sink`1.Source">
            <summary>
            Gets Source.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Interop.ComWrap`1">
            <summary>
            A wrapper of COM objects.
            </summary>
            <typeparam name="T">The type of the managed class used to wrap de COM object.
            </typeparam>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.ComWrap`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Interop.ComWrap`1"/> class.
            </summary>
            <param name="instance">
            The instance.
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.ComWrap`1.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Tenaris.Library.Framework.Interop.ComWrap`1"/> class. 
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.ComWrap`1.op_Implicit(Tenaris.Library.Framework.Interop.ComWrap{`0})~`0">
            <summary>
            Overrides the cast operator. Allows to cast between ComWrap and T automatically.
            </summary>
            <param name="x">
            The ComWrap version of the object.
            </param>
            <returns>
            The underlying object.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.ComWrap`1.op_Implicit(Tenaris.Library.Framework.Interop.ComWrap{`0})~System.Boolean">
            <summary>
            Overrides the bool operator.
            </summary>
            <param name="x">
            The object on which the operation is performed.
            </param>
            <returns>
            True if the underlying object is null
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.ComWrap`1.op_LogicalNot(Tenaris.Library.Framework.Interop.ComWrap{`0})">
            <summary>
            Overrides the ! operator.
            </summary>
            <param name="x">
            The object to compare to.
            </param>
            <returns>
            True if the underlying object is null.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.ComWrap`1.Create(`0)">
            <summary>
            Factory for the ComWrap object.
            </summary>
            <param name="instance">
            The instance of the object to wrap.
            </param>
            <returns>
            The ComWrap instance.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.ComWrap`1.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.ComWrap`1.Dispose(System.Boolean)">
            <summary>
            Disposes this object.
            </summary>
            <param name="disposing">
            If true the object will release unmanaged resources.
            </param>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.ComWrap`1.Instance">
            <summary>
            Gets the underlying object instance.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.ComWrap`1.Disposed">
            <summary>
            Gets a value indicating whether the object is disposed.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.IO.CompareFileByWriteDate">
            <summary>
            A file comparer by date. You can use this to sort an array of paths by file creation time.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.IO.CompareFileByWriteDate.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compares two files by last write date.
            </summary>
            <param name="a">
            File 'a' to compare.
            </param>
            <param name="b">
            File 'b' to compare.
            </param>
            <returns>
            If a is older than b, returns a negative value, if b is older, return a positive value. 
            If both are the same return a zero.
            </returns>
        </member>
        <member name="T:Tenaris.Library.Framework.IO.CompareFileBySize">
            <summary>
            A file comparer by date. You can use this to sort an array of paths by file creation time.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.IO.CompareFileBySize.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compares two files by size.
            </summary>
            <param name="a">
            File 'a' to compare.
            </param>
            <param name="b">
            File 'b' to compare.
            </param>
            <returns>
            If a is smaller than b, returns a negative value, if b is smaller, return a positive value. 
            If both are the same size a zero.
            </returns>
        </member>
        <member name="T:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost">
            <summary>
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.CreateLogicalThreadState">
            <summary>
            Creates the state of the logical thread.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.DeleteLogicalThreadState">
            <summary>
            Deletes the state of the logical thread.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.SwitchInLogicalThreadState(System.UInt32@)">
            <summary>
            Switches the state of the in logical thread.
            </summary>
            <param name="pFiberCookie">The p fiber cookie.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.SwitchOutLogicalThreadState(System.IntPtr)">
            <summary>
            Switches the state of the out logical thread.
            </summary>
            <param name="pFiberCookie">The p fiber cookie.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.LocksHeldByLogicalThread(System.UInt32@)">
            <summary>
            Lockses the held by logical thread.
            </summary>
            <param name="pCount">The p count.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.MapFile(System.IntPtr,System.IntPtr@)">
            <summary>
            Maps the file.
            </summary>
            <param name="hFile">The h file.</param>
            <param name="hMapAddress">The h map address.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.GetConfiguration(System.Object@)">
            <summary>
            Gets the configuration.
            </summary>
            <param name="pConfiguration">The p configuration.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.CreateDomain(System.String,System.Object,System.Object@)">
            <summary>
            Creates the domain.
            </summary>
            <param name="pwzFriendlyName">Name of the PWZ friendly.</param>
            <param name="pIdentityArray">The p identity array.</param>
            <param name="pAppDomain">The p app domain.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.GetDefaultDomain(System.Object@)">
            <summary>
            Gets the default domain.
            </summary>
            <param name="pAppDomain">The p app domain.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.EnumDomains(System.IntPtr@)">
            <summary>
            Enums the domains.
            </summary>
            <param name="hEnum">The h enum.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.NextDomain(System.IntPtr,System.Object@)">
            <summary>
            Nexts the domain.
            </summary>
            <param name="hEnum">The h enum.</param>
            <param name="pAppDomain">The p app domain.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.CloseEnum(System.IntPtr)">
            <summary>
            Closes the enum.
            </summary>
            <param name="hEnum">The h enum.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.CreateDomainEx(System.String,System.Object,System.Object,System.Object@)">
            <summary>
            Creates the domain ex.
            </summary>
            <param name="pwzFriendlyName">Name of the PWZ friendly.</param>
            <param name="pSetup">The p setup.</param>
            <param name="pEvidence">The p evidence.</param>
            <param name="pAppDomain">The p app domain.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.CreateDomainSetup(System.Object@)">
            <summary>
            Creates the domain setup.
            </summary>
            <param name="pAppDomainSetup">The p app domain setup.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.CreateEvidence(System.Object@)">
            <summary>
            Creates the evidence.
            </summary>
            <param name="pEvidence">The p evidence.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.UnloadDomain(System.Object)">
            <summary>
            Unloads the domain.
            </summary>
            <param name="pAppDomain">The p app domain.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.ICorRuntimeHost.CurrentDomain(System.Object@)">
            <summary>
            Currents the domain.
            </summary>
            <param name="pAppDomain">The p app domain.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.CloseEnum(System.IntPtr)">
            <summary>
            </summary>
            <param name="hEnum"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.CreateDomain(System.String,System.Object,System.Object@)">
            <summary>
            </summary>
            <param name="pwzFriendlyName"></param>
            <param name="pIdentityArray"></param>
            <param name="pAppDomain"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.CreateDomainEx(System.String,System.Object,System.Object,System.Object@)">
            <summary>
            </summary>
            <param name="pwzFriendlyName"></param>
            <param name="pSetup"></param>
            <param name="pEvidence"></param>
            <param name="pAppDomain"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.CreateDomainSetup(System.Object@)">
            <summary>
            </summary>
            <param name="pAppDomainSetup"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.CreateEvidence(System.Object@)">
            <summary>
            </summary>
            <param name="pEvidence"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.CreateLogicalThreadState">
            <summary>
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.CurrentDomain(System.Object@)">
            <summary>
            </summary>
            <param name="pAppDomain"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.DeleteLogicalThreadState">
            <summary>
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.EnumDomains(System.IntPtr@)">
            <summary>
            </summary>
            <param name="hEnum"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.GetConfiguration(System.Object@)">
            <summary>
            </summary>
            <param name="pConfiguration"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.GetDefaultDomain(System.Object@)">
            <summary>
            </summary>
            <param name="pAppDomain"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.LocksHeldByLogicalThread(System.UInt32@)">
            <summary>
            </summary>
            <param name="pCount"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.MapFile(System.IntPtr,System.IntPtr@)">
            <summary>
            </summary>
            <param name="hFile"></param>
            <param name="hMapAddress"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.NextDomain(System.IntPtr,System.Object@)">
            <summary>
            </summary>
            <param name="hEnum"></param>
            <param name="pAppDomain"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.Start">
            <summary>
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.Stop">
            <summary>
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.SwitchInLogicalThreadState(System.UInt32@)">
            <summary>
            </summary>
            <param name="pFiberCookie"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.SwitchOutLogicalThreadState(System.IntPtr)">
            <summary>
            </summary>
            <param name="pFiberCookie"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.NativeMethods.ClrHost.CorRuntimeHost.UnloadDomain(System.Object)">
            <summary>
            </summary>
            <param name="pAppDomain"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.GetHandler">
            <summary>
            
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="T:Tenaris.Library.Framework.SetHandler">
            <summary>
            
            </summary>
            <param name="source">The source.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Tenaris.Library.Framework.ConstructorHandler">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Tenaris.Library.Framework.ObjectSerializer">
            <summary>
             Class for fast-serializing object's public properies and fields
             Supports: base types, enums, array of base types and objects
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeUnknown">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeVoid">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeObject">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeBoolean">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeByte">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeChar">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeShort">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeInt">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeFloat">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeDouble">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeString">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeObjectArray">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeBoolArray">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeByteArray">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeShortArray">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeIntArray">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeFloatArray">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeDoubleArray">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeStringArray">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeUShort">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeUInt">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeUShortArray">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeUIntArray">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeLong">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeULong">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeDateTime">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeDateTimeOffset">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeTimeSpan">
            <summary>
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.ObjectSerializer.TypeGuid">
            <summary>
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.ObjectSerializer.ToObject``1(System.Byte[])">
            <summary>
             Deserializes an object from a byte array
            </summary>
            <param name="bytes"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.ObjectSerializer.ToObject``1(System.IO.MemoryStream)">
            <summary>
             Deserializes an object from a Stream
            </summary>
            <param name="data"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.ObjectSerializer.ToObject``1(System.IO.BinaryReader)">
            <summary>
             Deserializes an object from a BinaryReader
            </summary>
            <param name="buffer"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.ObjectSerializer.ToArray(System.Object)">
            <summary>
             Serializes an Object and returns a byte array
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.ObjectSerializer.ToStream(System.Object,System.IO.MemoryStream)">
            <summary>
             Serializes an Object into a MemoryStream
            </summary>
            <param name="obj"></param>
            <param name="data"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.ObjectSerializer.SerializeToWriter(System.Object,System.IO.BinaryWriter)">
            <summary>
             Serializes an Object into a BinaryWriter
            </summary>
            <param name="obj"></param>
            <param name="buffer"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.ObjectSerializer.DeserializeToObject(System.IO.BinaryReader)">
            <summary>
             Deserializes a buffer into an Object
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.ObjectSerializer.ClassWriter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.ObjectSerializer.ClassWriter.#ctor(System.IO.BinaryWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.ObjectSerializer.ClassWriter"/> class.
            </summary>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="P:Tenaris.Library.Framework.ObjectSerializer.ClassWriter.Cache">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.ObjectSerializer.ClassWriter.Buffer">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.ObjectSerializer.ClassMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.ObjectSerializer.ClassMetadata.Type">
            <summary>
            Gets and sets ClassMetadata type.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.ObjectSerializer.ClassMetadata.Name">
            <summary>
            Gets and sets name
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.ObjectSerializer.ClassMetadata.Constructor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.ObjectSerializer.ClassMetadata.Props">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.ObjectSerializer.ClassMetadata.Hash">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.ObjectSerializer.PropertyMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.ObjectSerializer.PropertyMetadata.#ctor(System.Type,System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.ObjectSerializer.PropertyMetadata"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="info">The info.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.ObjectSerializer.PropertyMetadata.#ctor(System.Type,System.Reflection.FieldInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.ObjectSerializer.PropertyMetadata"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="info">The info.</param>
        </member>
        <member name="P:Tenaris.Library.Framework.ObjectSerializer.PropertyMetadata.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.ObjectSerializer.PropertyMetadata.DynGet">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.ObjectSerializer.PropertyMetadata.DynSet">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.MethodGenerator">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.MethodGenerator.CreateConstructorHandler(System.Type)">
            <summary>
            Creates the constructor handler.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.MethodGenerator.CreateGetHandler(System.Type,System.Reflection.PropertyInfo)">
            <summary>
            Creates the get handler.
            </summary>
            <param name="type">The type.</param>
            <param name="propertyInfo">The property info.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.MethodGenerator.CreateGetHandler(System.Type,System.Reflection.FieldInfo)">
            <summary>
            Creates the get handler.
            </summary>
            <param name="type">The type.</param>
            <param name="fieldInfo">The field info.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.MethodGenerator.CreateSetHandler(System.Type,System.Reflection.PropertyInfo)">
            <summary>
            Creates the set handler.
            </summary>
            <param name="type">The type.</param>
            <param name="propertyInfo">The property info.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.MethodGenerator.CreateSetHandler(System.Type,System.Reflection.FieldInfo)">
            <summary>
            Creates the set handler.
            </summary>
            <param name="type">The type.</param>
            <param name="fieldInfo">The field info.</param>
            <returns></returns>
        </member>
        <member name="T:Tenaris.Library.Framework.PrimitiveSerializer`1">
            <summary>
            The primitive serializer.
            </summary>
            <typeparam name="T">
            The managed type to serialize/deserealize
            </typeparam>
        </member>
        <member name="M:Tenaris.Library.Framework.PrimitiveSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.PrimitiveSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.PrimitiveSerializer`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.PrimitiveSerializer`1"/> class.
            </summary>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.PrimitiveSerializer`1.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.PrimitiveSerializer`1"/> class.
            </summary>
            <param name="buffer">
            The buffer.
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.PrimitiveSerializer`1.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Tenaris.Library.Framework.PrimitiveSerializer`1"/> class. 
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.PrimitiveSerializer`1.ToArray">
            <summary>
            The to array.
            </summary>
            <returns>
            Returns an array filled with memory representation of the struct member Value
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.PrimitiveSerializer`1.FromArray(System.Byte[])">
            <summary>
            Populates a struct from byte array
            </summary>
            <param name="data">
            Byte array with the same disposition of struct member Value
            </param>
        </member>
        <member name="P:Tenaris.Library.Framework.PrimitiveSerializer`1.Value">
            <summary>
            Gets or sets the serializable value
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Reflection.AttributeExtensions">
            <summary>
            Extension methods for System.Attribute
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.AttributeExtensions.IsDefined``1(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            Checks if the specified attribute type is present on the specified member
            </summary>
            <typeparam name="TAttribute">
            The Attribute type
            </typeparam>
            <param name="info">
            The Member on which to check
            </param>
            <param name="inherit">
            Whether or not to look on the inheritance chain
            </param>
            <returns>
            If the Attribute is present returns True, and False otherwise
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.AttributeExtensions.IsDefined``1(System.Reflection.ParameterInfo,System.Boolean)">
            <summary>
            Checks if the specified attribute type is present on the specified member
            </summary>
            <typeparam name="TAttribute">
            The Attribute type
            </typeparam>
            <param name="info">
            The Member on which to check
            </param>
            <param name="inherit">
            Whether or not to look on the inheritance chain
            </param>
            <returns>
            If the Attribute is present returns True, and False otherwise
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.AttributeExtensions.GetAttribute``1(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            Gets the specified Attribute from the specified member info.
            </summary>
            <typeparam name="TAttribute">
            The Attribute type
            </typeparam>
            <param name="info">
            The Member on which to check
            </param>
            <param name="inherit">
            Whether or not to look on the inheritance chain
            </param>
            <returns>
            The attribute instance if present or null otherwise.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.AttributeExtensions.GetAttribute``1(System.Reflection.ParameterInfo,System.Boolean)">
            <summary>
            Gets the specified Attribute from the specified Parameter
            </summary>
            <typeparam name="TAttribute">
            The Attribute type
            </typeparam>
            <param name="info">
            The Member on which to check
            </param>
            <param name="inherit">
            Whether or not to look on the inheritance chain
            </param>
            <returns>
            The attribute instance if present or null otherwise.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.AttributeExtensions.GetAllAttributes``1(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            Gets the specified type of Attributes from the speciefied Member and assures that the returned array is never NULL
            </summary>
            <typeparam name="TAttribute">
            An Attribute type
            </typeparam>
            <param name="info">
            A Member info instance
            </param>
            <param name="inherit">
            Controls inherited attribute inclusion
            </param>
            <returns>
            All the Attributes defined on the instance
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.AttributeExtensions.GetAllAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
            <summary>
            Gets the specified type of Attributes from the speciefied Member and assures that the returned array is never NULL
            </summary>
            <param name="info">
            A Member info instance
            </param>
            <param name="attributeType">
            An Attribute type
            </param>
            <param name="inherit">
            Controls inherited attribute inclusion
            </param>
            <returns>
            All the Attributes defined on the instance
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.AttributeExtensions.GetDescription(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            Tries to get the Description attached to a member
            </summary>
            <param name="info">
            The member for which the Description is desired
            </param>
            <param name="inherited">
            Whether to search the inheritance chain for the Description or not
            </param>
            <returns>
            The found Description or an empty string
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.AttributeExtensions.GetDescription(System.Reflection.ParameterInfo,System.Boolean)">
            <summary>
            Tries to get the Description attached to a Parameter
            </summary>
            <param name="info">
            The Parameter for which the Description is desired
            </param>
            <param name="inherited">
            Whether to search the inheritance chain for the Description or not
            </param>
            <returns>
            The found Description or an empty string
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.AttributeExtensions.GetDefaultValue(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            Tries to get the DefaultValue attached to a member
            </summary>
            <param name="info">
            The member for which the DefaultValue is desired
            </param>
            <param name="inherited">
            Whether to search the inheritance chain for the DefaultValue or not
            </param>
            <returns>
            The found DefaultValue or null
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.AttributeExtensions.GetDefaultValue(System.Reflection.ParameterInfo,System.Boolean)">
            <summary>
            Tries to get the DefaultValue attached to a parameter
            </summary>
            <param name="info">
            The parameter for which the DefaultValue is desired
            </param>
            <param name="inherited">
            Whether to search the inheritance chain for the DefaultValue or not
            </param>
            <returns>
            The found DefaultValue or null
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.AttributeExtensions.IsInput(System.Reflection.ParameterInfo)">
            <summary>
            Indicates whether the given parameter is an input parameter.
            </summary>
            <param name="info">
            The parameter info to which this method applies.
            </param>
            <returns>
            A value indicating whether the parameter is input-only.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.AttributeExtensions.IsOutput(System.Reflection.ParameterInfo)">
            <summary>
            Indicates whether the given parameter is an output parameter.
            </summary>
            <param name="info">
            The parameter info to which this method applies.
            </param>
            <returns>
            A value indicating whether the parameter is output-only.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.AttributeExtensions.IsInOut(System.Reflection.ParameterInfo)">
            <summary>
            Indicates whether the given parameter is a ref parameter (ref).
            </summary>
            <param name="info">
            The parameter info to which this method applies.
            </param>
            <returns>
            A value indicating whether the parameter is ref.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.AttributeExtensions.IsReturn(System.Reflection.ParameterInfo)">
            <summary>
            Indicates whether the given parameter is a ref parameter (ref).
            </summary>
            <param name="info">
            The parameter info to which this method applies.
            </param>
            <returns>
            A value indicating whether the parameter is the return value.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.AttributeExtensions.GetParameterType(System.Reflection.ParameterInfo)">
            <summary>
            Returns the true underlying parameter type taking into account the possibility of the given type being specified by-ref (as for out/ref params)
            </summary>
            <param name="info">
            The parameter info to which this method applies.
            </param>
            <returns>
            The real underlying parameter type.
            </returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Reflection.IndexedProperty">
            <summary>
            IndexedProperty class.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Reflection.Property">
            <summary>
            Property class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.Property.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Reflection.Property"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.Property.GetValue(System.Object)">
            <summary>
            Gets a value.
            </summary>
            <param name="from">Source of the value.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.Property.SetValue(System.Object,System.Object)">
            <summary>
            Sets a value.
            </summary>
            <param name="to">Destination of the value.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.Property.GetPropertyType(System.Object)">
            <summary>
            Gets a property type.
            </summary>
            <param name="from">Source of the property.</param>
            <returns>Property type.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.Property.GetPropertyInfoGet(System.Object,System.String)">
            <summary>
            Gets property information.
            </summary>
            <param name="from">Source property.</param>
            <param name="name">Name of the property.</param>
            <returns>Property information.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.Property.GetPropertyInfoSet(System.Object,System.String)">
            <summary>
            Sets property information.
            </summary>
            <param name="from">Destination property.</param>
            <param name="name">Name of the property.</param>
            <returns>Property information.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.Property.GetPropertyInfoGet(System.Object,System.String,System.Type[])">
            <summary>
            Gets property information.
            </summary>
            <param name="from">Source property.</param>
            <param name="name">Name of the property.</param>
            <param name="types">Property types.</param>
            <returns>Property information.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.Property.GetPropertyInfoSet(System.Object,System.String,System.Type[])">
            <summary>
            Sets property information.
            </summary>
            <param name="from">Destination property.</param>
            <param name="name">Name of the property.</param>
            <param name="types">Property types.</param>
            <returns>Property information.</returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Reflection.Property.PropertyName">
            <summary>
            Gets or sets the property name.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Reflection.IndexedProperty.indexes">
            <summary>
            Indexes values.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.IndexedProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Reflection.IndexedProperty"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.IndexedProperty.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Reflection.IndexedProperty"/> class.
            </summary>
            <param name="index">Position index.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.IndexedProperty.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Reflection.IndexedProperty"/> class.
            </summary>
            <param name="indexes">Position indexes.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.IndexedProperty.GetValue(System.Object)">
            <summary>
            Gets a value.
            </summary>
            <param name="from">Source of the value.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.IndexedProperty.SetValue(System.Object,System.Object)">
            <summary>
            Sets a value.
            </summary>
            <param name="to">Destination of the value.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="P:Tenaris.Library.Framework.Reflection.IndexedProperty.Indexes">
            <summary>
            Gets or sets the indexes.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Reflection.IndexedProperty.IndexTypes">
            <summary>
            Gets or sets the index types.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Reflection.NamedProperty">
            <summary>
            NamedProperty class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.NamedProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Reflection.NamedProperty"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.NamedProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Reflection.NamedProperty"/> class.
            </summary>
            <param name="name">Property name.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.NamedProperty.GetValue(System.Object)">
            <summary>
            Get value.
            </summary>
            <param name="from">Source of the value.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.NamedProperty.SetValue(System.Object,System.Object)">
            <summary>
            Set value.
            </summary>
            <param name="to">Destination of the value.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="P:Tenaris.Library.Framework.Reflection.NamedProperty.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Reflection.PropertyPath">
            <summary>
            PropertyPath class.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Reflection.PropertyPath.pathSecuence">
            <summary>
            Path secuence.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Reflection.PropertyPath.path">
            <summary>
            Path name.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.PropertyPath.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Reflection.PropertyPath"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.PropertyPath.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Reflection.PropertyPath"/> class.
            </summary>
            <param name="path">Property path.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.PropertyPath.GetValue(System.String,System.Object)">
            <summary>
            Devuelve el valor de la propiedad indicada por 'path'
            </summary>
            <param name="path">File path.</param>
            <param name="from">From object.</param>
            <returns>Obtained value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.PropertyPath.SetValue(System.String,System.Object,System.Object)">
            <summary>
            Asigna el valor 'value' al objeto 'to' según el path indicado y devuelve 'to'
            </summary>
            <param name="path">File path.</param>
            <param name="value">Object value.</param>
            <param name="to">To value;:</param>
            <returns>Destination object.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.PropertyPath.SetValue(System.Object,System.Object)">
            <summary>
            Sets a value.
            </summary>
            <param name="to">Destination of the value.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.PropertyPath.GetType(System.Object)">
            <summary>
            Get type from 'to' object
            </summary>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.PropertyPath.GetValue(System.Object)">
            <summary>
            Gets a value.
            </summary>
            <param name="from">Source of the value.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.PropertyPath.ToString">
            <summary>
            Converts an object to a string.
            </summary>
            <returns>String object.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.PropertyPath.ParseNamedProperty(System.Int32@,System.Char[])">
            <summary>
            Parses the name.
            </summary>
            <param name="startIndex">Start index.</param>
            <param name="data">Data to search.</param>
            <returns>The name.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.PropertyPath.ParseIndexedProperty(System.Int32@,System.Char[])">
            <summary>
            Parses the index.
            </summary>
            <param name="startIndex">Start from.</param>
            <param name="data">Data to search.</param>
            <returns>The index.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Reflection.PropertyPath.BuildPathSecuence">
            <summary>
            Build path secuence.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Reflection.PropertyPath.Path">
            <summary>
            Gets or sets the path.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Reflection.PropertyPath.PathSecuence">
            <summary>
            Gets the path sequence.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Remoting.EventQueue`1">
            <summary>
            
            </summary>
            <typeparam name="TEventArgs">The type of the event args.</typeparam>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventQueue`1.Enqueue(System.Object,`0)">
            <summary>
            Enqueues the specified sender.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The instance containing the event data.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventQueue`1.#ctor(Tenaris.Library.Framework.Threading.WorkerPool,System.EventHandler{`0},System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Remoting.EventQueue`1"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="client">The client.</param>
            <param name="tries">The tries.</param>
            <param name="sleepBetweenTries">The sleep between tries.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventQueue`1.#ctor(Tenaris.Library.Framework.Threading.WorkerPool,System.EventHandler{`0},System.Boolean,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Remoting.EventQueue`1"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="client">The client.</param>
            <param name="sendMultiplesEvents">if set to <c>true</c> [send multiples events].</param>
            <param name="tries">The tries.</param>
            <param name="sleepBetweenTries">The sleep between tries.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventQueue`1.GetSchemaDomainPortFromHandler(System.Object,System.String)">
            <summary>
            Gets the schema domain port from handler.
            </summary>
            <param name="handler">The handler.</param>
            <param name="defaultText">The default text.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventQueue`1.WorkerFinished(System.Object,System.EventArgs)">
            <summary>
            Handles the Finished event of the Worker control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventQueue`1.RaiseEventsProcess(System.Object)">
            <summary>
            Raises the events process.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventQueue`1.RaiseMultipleEvents">
            <summary>
            Raises the multiple events.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventQueue`1.RaiseSingleEvents">
            <summary>
            Raises the single events.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventQueue`1.CreateMultipleEventArgs(System.Object@)">
            <summary>
            Creates the multiple event args.
            </summary>
            <param name="sender">The sender.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventQueue`1.IsTimeout(System.Exception)">
            <summary>
            Determines whether the specified ex is timeout.
            </summary>
            <param name="ex">The ex.</param>
            <returns>
              <c>true</c> if the specified ex is timeout; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.EventQueue`1.Client">
            <summary>
            Gets or sets the client.
            </summary>
            <value>
            The client.
            </value>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.EventQueue`1.DispatchMultipleEvents">
            <summary>
            Gets or sets a value indicating whether [dispatch multiple events].
            </summary>
            <value>
            <c>true</c> if [dispatch multiple events]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Tenaris.Library.Framework.Remoting.EventQueue`1.DispacthFinished">
            <summary>
            Occurs when [dispacth finished].
            </summary>
        </member>
        <member name="E:Tenaris.Library.Framework.Remoting.EventQueue`1.DispatchError">
            <summary>
            Occurs when [dispatch error].
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.EventQueue`1.InvocationTries">
            <summary>
            Invocation number of attempts before sending a communication error.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.EventQueue`1.InvocationTrySleepTime">
            <summary>
            Waiting time (in milliseconds) between invocations attempts.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Remoting.RemotableEvent`1">
            <summary>
            Client-side remote event handler.
            </summary>
            <typeparam name="TEventArgs">The EventArg associated with this event.</typeparam>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.RemotableEvent`1.Handler(System.Object,`0)">
            <summary>
            The entry point for the server-side class to invoke events remotly.
            </summary>
            <param name="sender">
            The event sender.
            </param>
            <param name="args">
            The event args.
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.RemotableEvent`1.InitializeLifetimeService">
            <summary>
            Overrides the lifetime service initializer so the object is never dipose by GC.
            </summary>
            <returns>
            Always null.
            </returns>
        </member>
        <member name="E:Tenaris.Library.Framework.Remoting.RemotableEvent`1.Event">
            <summary>
            The event to connect from the client side.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Remoting.EventDispatcher`1">
            <summary>
            A set of standard event dispatcher for using with InvokeEvent.
            </summary>
            <typeparam name="TEventArgs">Event arguments.</typeparam>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventDispatcher`1.WorkerDispatcher(System.EventHandler{`0},System.EventHandler{`0},System.Object,`0)">
            <summary>
            An event dispatcher that uses the worker class in this library
            to dispatch events.
            </summary>
            <param name="source">The source to invoke the event on.</param>
            <param name="client">The target to invoke the event on.</param>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The event args.</param>
        </member>
        <member name="E:Tenaris.Library.Framework.Remoting.EventDispatcher`1.ErrorDetected">
            <summary>
            This event will be invoked every time an error is detected on the dispatch of a remote event.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.EventDispatcher`1.DisconnectOnError">
            <summary>
            Gets or sets a value indicating whether to disconnect on errors or not.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Remoting.EventDispatcher`1.ErrorDetectedHandler">
            <summary>
            The handler prototype to be invoked when errors are detected on the dispatch of the
            event.
            </summary>
            <param name="sender">The remote-server event.</param>
            <param name="error">The exception raised while dispatching the event.</param>
            <param name="client">The target to which the event was being dispatched.</param>
            <param name="disconnect">A reference boolean that can be used to disconnect
            the remote event.</param>
        </member>
        <member name="T:Tenaris.Library.Framework.Remoting.EventDispatcher`1.WorkerDispatcherWorker">
            <summary>
            A worker class for the worker dispatcher.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventDispatcher`1.WorkerDispatcherWorker.DispatchEvent(System.EventHandler{`0},System.EventHandler{`0},System.Object,`0)">
            <summary>
            Dispatches an event to the worker.
            </summary>
            <param name="source">The source.</param>
            <param name="client">The source.</param>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The event args.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventDispatcher`1.WorkerDispatcherWorker.WorkerContext.Get(System.Delegate)">
            <summary>
            Gets the specified client.
            </summary>
            <param name="client">The client.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventDispatcher`1.WorkerDispatcherWorker.WorkerContext.PostEvent(System.Action)">
            <summary>
            Posts the event.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="T:Tenaris.Library.Framework.Remoting.RemotableEventHandler`1">
            <summary>
            The event handler for remotly dispatched events.
            </summary>
            <param name="sender">
            The event sender.
            </param>
            <param name="e">
            The event args.
            </param>
            <typeparam name="TEventArgs">
            The TEventArgs type to use for this event.
            </typeparam>
        </member>
        <member name="T:Tenaris.Library.Framework.Remoting.EventHandlerAdapter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventHandlerAdapter.CreateDelegateToHandler(Tenaris.Library.Framework.Remoting.EventHandlerAdapter)">
            <summary>
            Creates a delegate to local handler (OnRaisedEvent) for the eventName event that belongs to subjectTypePublisher type.
            </summary>
            <param name="adapter">Handler adapter</param>
            <returns>OnRaisedEvent delegate</returns>
            <remarks>With event name and event type, obtains the event argument type, 
            this way, it can create the hadler delegate typing the args param.</remarks>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventHandlerAdapter.GetEventInfo(System.Type,System.String)">
            <summary>
            GetEventInfo method.
            </summary>
            <param name="subjectType">Subject type.</param>
            <param name="eventName">Event name.</param>
            <returns>The event information.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventHandlerAdapter.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Remoting.EventHandlerAdapter"/> class.
            </summary>
            <param name="eventName">Name of the event.</param>
            <param name="subjectTypePublisher">The subject type publisher.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventHandlerAdapter.#ctor(System.String,System.Type,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Remoting.EventHandlerAdapter"/> class.
            </summary>
            <param name="eventName">Name of the event.</param>
            <param name="subjectTypePublisher">The subject type publisher.</param>
            <param name="subject">The subject.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventHandlerAdapter.InitializeLifetimeService">
            <summary>
            Obtains a lifetime service object to control the lifetime policy for this instance.
            </summary>
            <returns>
            An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease"/> used to control the lifetime policy for this instance. 
            This is the current lifetime service object for this instance if one exists; 
            otherwise, a new lifetime service object initialized to the value of the property.
            </returns>
            <exception cref="T:System.Security.SecurityException">The immediate caller does not have infrastructure permission. </exception>
              
            <PermissionSet>
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, 
                PublicKeyToken=b77a5c561934e089" version="1" Flags="RemotingConfiguration, Infrastructure"/>
            </PermissionSet>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventHandlerAdapter.Subscribe(System.Object)">
            <summary>
            It subscribes the EventName event from the Subjet param.
            </summary>
            <param name="subject">Subject value.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventHandlerAdapter.Unsubscribe">
            <summary>
            Unsubscribe EventName event and releases the Subject
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventHandlerAdapter.OnRaisedEvent``1(System.Object,``0)">
            <summary>
            Raised event handler.
            </summary>
            <typeparam name="TArgs">Custom event arguments.</typeparam>
            <param name="sender">Sender object.</param>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.EventHandlerAdapter.OnRaisedEvent2(System.Object,System.EventArgs)">
            <summary>
            Called when [raised event2].
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Tenaris.Library.Framework.Remoting.EventHandlerAdapter.Raised">
            <summary>
            Raised event handler.
            </summary>
        </member>
        <member name="E:Tenaris.Library.Framework.Remoting.EventHandlerAdapter.RaisedWrapper">
            <summary>
            Raised event handler wrapper.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.EventHandlerAdapter.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>
            The tag.
            </value>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.EventHandlerAdapter.EventName">
            <summary>
            Gets or sets the name of the event.
            </summary>
            <value>
            The name of the event.
            </value>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.EventHandlerAdapter.Subject">
            <summary>
            Object to be observed, send the original events.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.EventHandlerAdapter.SubjectType">
            <summary>
            Type of the subject.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.EventHandlerAdapter.DelegateAdapter">
            <summary>
            Local handler delegate. This handler is using to subscribe the Subject.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Remoting.EventHandlerWrapper">
            <summary>
            Event wrapper delegate.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="originalSender">Original sender.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="T:Tenaris.Library.Framework.Remoting.RemotableEventServer`1">
            <summary>
            Server-side remote event helper class.
            </summary>
            <typeparam name="TEventArgs">
            The TEventArgs types to be used in this event.
            </typeparam>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.RemotableEventServer`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the RemotableEventServer class.
            </summary>
            <param name="disconnectOnError">If true, clients will be disconnected on errors.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.RemotableEventServer`1.#ctor">
            <summary>
            Initializes a new instance of the RemotableEventServer class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.RemotableEventServer`1.InvokeEvent(System.Object,`0)">
            <summary>
            Invokes the event on the remote clients.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="args">The event args.</param>
        </member>
        <member name="E:Tenaris.Library.Framework.Remoting.RemotableEventServer`1.ErrorDetected">
            <summary>
            This event will be invoked every time an error is detected on the dispatch of a remote event.
            </summary>
        </member>
        <member name="E:Tenaris.Library.Framework.Remoting.RemotableEventServer`1.Event">
            <summary>
            Remote clients connects to this event to recieve notifications.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Remoting.RemotableEventServer`1.ErrorDetectedHandler">
            <summary>
            The handler prototype to be invoked when errors are detected on the dispatch of the
            event.
            </summary>
            <param name="sender">The remote-server event.</param>
            <param name="error">The exception raised while dispatching the event.</param>
            <param name="client">The target to which the event was being dispatched.</param>
            <param name="disconnect">A reference boolean that can be used to disconnect
            the remote event.</param>
        </member>
        <member name="T:Tenaris.Library.Framework.Interop.RemotableSink`3">
            <summary>
            A remoteable COM event.
            </summary>
            <typeparam name="TOwnerType">
            The remote event owner type.
            </typeparam>
            <typeparam name="TSourceType">
            The event source type.
            </typeparam>
            <typeparam name="TEventArgs">
            The event args type.
            </typeparam>
        </member>
        <member name="F:Tenaris.Library.Framework.Interop.RemotableSink`3.owner">
            <summary>
            Sink owner.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Interop.RemotableSink`3.handler">
            <summary>
            Remote handler.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Interop.RemotableSink`3.#ctor(`0,`1,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Interop.RemotableSink`3"/> class.
            </summary>
            <param name="owner">
            The owner.
            </param>
            <param name="source">
            The source.
            </param>
            <param name="eventsIntf">
            The events intf.
            </param>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.RemotableSink`3.Owner">
            <summary>
            Gets Owner.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Interop.RemotableSink`3.Handler">
            <summary>
            Gets Handler.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.AdditionalFunctionEventArgs">
            <summary>
            Event Handling for Additional Functions
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.AdditionalFunctionEventArgs.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.AdditionalFunctionEventArgs"/> class. 
            This is the only constructor
            </summary>
            <param name="name">
            The name of the function.
            </param>
            <param name="parameters">
            Function parameters.
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.AdditionalFunctionEventArgs.GetParameters">
            <summary>
            This method will return an array of objects that are parameters.
            </summary>
            <returns>Object array of function parameters</returns>
        </member>
        <member name="P:Tenaris.Library.Framework.AdditionalFunctionEventArgs.Name">
            <summary>
            Gets the name of the additional function
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.AdditionalFunctionEventArgs.ReturnValue">
            <summary>
            Gets or sets return value
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Remoting.InvocationContext">
            <summary>
            InvocationContext class.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Remoting.InvocationContext.RequestSendKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Remoting.InvocationContext.ResponseSendKey">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.AddDataToRequestContext(System.String,System.Object)">
            <summary>
            Adds value to be sent on next Request.
            After invocation, the container is emptied and adds to the RequestContext property.
            </summary>
            <param name="key">Key string.</param>
            <param name="value">Key value.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.AddDataToRequestContext(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Adds the data to request context.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.AddDataToRequestContext(System.String,System.Object,System.Runtime.Remoting.Messaging.LogicalCallContext)">
            <summary>
            Adds value to be sent on next Request.
            After invocation, the container is emptied and adds to the RequestContext property.
            </summary>
            <param name="key">Key string.</param>
            <param name="value">Key value.</param>
            <param name="callContext"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.AddDataToRequestContext(System.Collections.Generic.Dictionary{System.String,System.Object},System.Runtime.Remoting.Messaging.LogicalCallContext)">
            <summary>
            Adds the data to request context.
            </summary>
            <param name="data">The data.</param>
            <param name="callContext">The call context.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.RemoveDataFromRequestContext(System.String)">
            <summary>
            Removes the data from request context.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.RemoveDataFromRequestContext(System.String,System.Runtime.Remoting.Messaging.LogicalCallContext)">
            <summary>
            Removes the data from request context.
            </summary>
            <param name="key">The key.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.GetDataFromRequestContext(System.String)">
            <summary>
            Returns the data to be sent in next invocation, null in case it doesn't exists.
            After invocation, the container is emptied and adds to the RequestContext property.
            </summary>
            <param name="key">Key string.</param>
            <returns>Data from context.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.GetDataFromRequestContext(System.String,System.Runtime.Remoting.Messaging.LogicalCallContext)">
            <summary>
            Gets the data from request context.
            </summary>
            <param name="key">The key.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.CleanDataFromRequestContext">
            <summary>
            Cleans data container to be send in the Request.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.CleanDataFromRequestContext(System.Runtime.Remoting.Messaging.LogicalCallContext)">
            <summary>
            Cleans data container to be send in the Request.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.GetRequestContext">
            <summary>
            Returns the dictionary containing the data to be sent on next invocaction.
            </summary>
            <returns>Context dictionary.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.GetRequestContext(System.Runtime.Remoting.Messaging.LogicalCallContext)">
            <summary>
            Returns the dictionary containing the data to be sent on next invocaction.
            </summary>
            <returns>Context dictionary.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.AddDataToResponseContext(System.String,System.Object)">
            <summary>
            Adds value to be sent on next Response.
            After invocation, releases the container and adds to the RequestContext property.
            </summary>
            <param name="key">Key string.</param>
            <param name="value">Key value.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.AddDataToResponseContext(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Adds the data to response context.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.AddDataToResponseContext(System.String,System.Object,System.Runtime.Remoting.Messaging.LogicalCallContext)">
            <summary>
            Adds value to be sent on next Response.
            After invocation, releases the container and adds to the RequestContext property.
            </summary>
            <param name="key">Key string.</param>
            <param name="value">Key value.</param>
            <param name="callContext"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.AddDataToResponseContext(System.Collections.Generic.Dictionary{System.String,System.Object},System.Runtime.Remoting.Messaging.LogicalCallContext)">
            <summary>
            Adds the data to response context.
            </summary>
            <param name="data">The data.</param>
            <param name="callContext">The call context.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.GetDataFromResponseContext(System.String)">
            <summary>
            Returns the data to be sent in next Response, null in case it doesn't exists.
            After invocation, the container is emptied and adds to the RequestContext property.
            </summary>
            <param name="key">Key string.</param>
            <returns>Response context.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.GetDataFromResponseContext(System.String,System.Runtime.Remoting.Messaging.LogicalCallContext)">
            <summary>
            Returns the data to be sent in next Response, null in case it doesn't exists.
            After invocation, the container is emptied and adds to the RequestContext property.
            </summary>
            <param name="key">Key string.</param>
            <param name="callContext"></param>
            <returns>Response context.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.CleanDataFromResponseContext">
            <summary>
            Cleans data container to be sent in the Request.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.CleanDataFromResponseContext(System.Runtime.Remoting.Messaging.LogicalCallContext)">
            <summary>
            Cleans data container to be sent in the Request.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.GetResponseContext">
            <summary>
            Returns the dictionary that contains the data to be sent on next Response.
            </summary>
            <returns>Context dictionary.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.InvocationContext.GetResponseContext(System.Runtime.Remoting.Messaging.LogicalCallContext)">
            <summary>
            Returns the dictionary that contains the data to be sent on next Response.
            </summary>
            <returns>Context dictionary.</returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.InvocationContext.RequestContext">
            <summary>
            Gets or sets the request context from the last call.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.InvocationContext.ResponseContext">
            <summary>
            Contains the context data received on last invocation.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Remoting.RemoteEvent`1">
            <summary>
            Server-side remote event helper class.
            </summary>
            <typeparam name="TEventArgs">
            The TEventArgs types to be used in this event.
            </typeparam>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.RemoteEvent`1.#ctor">
            <summary>
            Initializes a new instance of the RemotableEventServer class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.RemoteEvent`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the RemotableEventServer class.
            </summary>
            <param name="disconnectOnError">if set to <c>true</c> [p disconnect on error].</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.RemoteEvent`1.InvokeEvent(System.Object,`0)">
            <summary>
            Invokes the event on the remote clients.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="args">The event args.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.RemoteEvent`1.InvokeEventAsync(System.Object,`0)">
            <summary>
            Creates a Thread and executes synchronous invocation. Do not uses the Threads pool.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="E:Tenaris.Library.Framework.Remoting.RemoteEvent`1.AsyncDispatchFinished">
            <summary>
            Occurs when [async dispatch finished].
            </summary>
        </member>
        <member name="E:Tenaris.Library.Framework.Remoting.RemoteEvent`1.ErrorDetected">
            <summary>
            This event will be invoked every time an error is detected on the dispatch of a remote event.
            </summary>
        </member>
        <member name="E:Tenaris.Library.Framework.Remoting.RemoteEvent`1.Event">
            <summary>
            Remote clients connects to this event to recieve notifications.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.RemoteEvent`1.DispatchMultipleEvents">
            <summary>
            Gets or sets a value indicating whether [dispatch multiple events].
            </summary>
            <value>
            <c>true</c> if [dispatch multiple events]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.RemoteEvent`1.InvocationTries">
            <summary>
            Invocation number of attempts before sending a communication error.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.RemoteEvent`1.InvocationTrySleepTime">
            <summary>
            Waiting time (in milliseconds) between invocations attempts.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Remoting.RemoteEvent`1.ErrorDetectedHandler">
            <summary>
            The handler prototype to be invoked when errors are detected on the dispatch of the
            event.
            </summary>
            <param name="sender">The remote-server event.</param>
            <param name="error">The exception raised while dispatching the event.</param>
            <param name="client">The target to which the event was being dispatched.</param>
            <param name="disconnect">A reference boolean that can be used to disconnect
            the remote event.</param>
        </member>
        <member name="T:Tenaris.Library.Framework.Remoting.RemotingContextEnvelope">
            <summary>
            RemotingContextEnvelope class.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.RemotingContextEnvelope.ContextData">
            <summary>
            Gets or sets the context data.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Remoting.DisposingEventArgs">
            <summary>
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Remoting.DisposingEventArgs.Cancel">
            <summary>
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Remoting.WorkerThread">
            <summary>
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.WorkerThread.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Remoting.WorkerThread"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.WorkerThread.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Remoting.WorkerThread"/> class.
            </summary>
            <param name="idleTimeOut">The idle time out.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.WorkerThread.Start(System.Threading.ThreadStart)">
            <summary>
            Starts the specified start.
            </summary>
            <param name="start">The start.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.WorkerThread.Start(System.Threading.ParameterizedThreadStart,System.Object)">
            <summary>
            Starts the specified start.
            </summary>
            <param name="start">The start.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.WorkerThread.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.WorkerThread.CancelDisposing">
            <summary>
            Cancels the disposing.
            </summary>
        </member>
        <member name="E:Tenaris.Library.Framework.Remoting.WorkerThread.Started">
            <summary>
            </summary>
        </member>
        <member name="E:Tenaris.Library.Framework.Remoting.WorkerThread.Finished">
            <summary>
            </summary>
        </member>
        <member name="E:Tenaris.Library.Framework.Remoting.WorkerThread.Disposed">
            <summary>
            </summary>
        </member>
        <member name="E:Tenaris.Library.Framework.Remoting.WorkerThread.Disposing">
            <summary>
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Remoting.WorkerThreadFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.WorkerThreadFactory.CreateThread">
            <summary>
            Creates the thread.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Remoting.WorkerThreadFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Remoting.WorkerThreadFactory"/> class.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Scripting.DefinedRegex">
            <summary>
            This class is internal to the library, houses different regular expression objects
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.DefinedRegex.Numeric">
            <summary>
            Gets Numeric.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.DefinedRegex.Hexadecimal">
            <summary>
            Gets Hexadecimal.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.DefinedRegex.Boolean">
            <summary>
            Gets Boolean.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.DefinedRegex.UnaryOp">
            <summary>
            Gets UnaryOp.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.DefinedRegex.BinaryOp">
            <summary>
            Gets BinaryOp.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.DefinedRegex.Parenthesis">
            <summary>
            Gets Parenthesis.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.DefinedRegex.Function">
            <summary>
            Gets Function.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.DefinedRegex.Variable">
            <summary>
            Gets Variable.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.DefinedRegex.DateTime">
            <summary>
            Gets DateTime.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.DefinedRegex.TimeSpan">
            <summary>
            Gets TimeSpan.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.DefinedRegex.Str">
            <summary>
            Gets String.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.DefinedRegex.WhiteSpace">
            <summary>
            Gets WhiteSpace.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Scripting.ExpressionEval">
            <summary>
            This class will evaluate boolean and mathmatical expressions
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Scripting.IExpression">
            <summary>
            This interface is the base for all of the expression evaluation objects.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.IExpression.Evaluate">
            <summary>
            Evaluates the expresion.
            </summary>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.IExpression.Expression">
            <summary>
            Gets or sets Expression.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Scripting.ExpressionEval"/> class. 
            Constructor with string
            </summary>
            <param name="expression">
            string of the Expression to evaluate
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.Evaluate(System.String)">
            <summary>
            Static version of the Expression Evaluator
            </summary>
            <param name="expressionString">
            The expression String.
            </param>
            <returns>
            The evaluate.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.Evaluate(System.String,Tenaris.Library.Framework.Scripting.FireAdditionalFunction)">
            <summary>
            Static version of the Expression Evaluator
            </summary>
            <param name="expression">
            expression to be evaluated
            </param>
            <param name="handler">
            attach a custom function handler
            </param>
            <returns>
            The evaluate.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.Evaluate">
            <summary>
            Evaluates the expression
            </summary>
            <returns>
            object of the expression return value
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.EvaluateBool">
            <summary>
            Evaluates the expression
            </summary>
            <returns>
            bool value of the evaluated expression
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.EvaluateInt">
            <summary>
            Evaluates the expression
            </summary>
            <returns>
            integer value of the evaluated expression
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.EvaluateDouble">
            <summary>
            Evaluates the expression
            </summary>
            <returns>
            double value of the evaluated expression
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.EvaluateLong">
            <summary>
            Evaluates the expression
            </summary>
            <returns>
            long value of the evaluated expression
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.SetVariable(System.String,System.Object)">
            <summary>
            Sets a variable's value
            </summary>
            <param name="key">
            variable name
            </param>
            <param name="value">
            variable value
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.ClearVariable(System.String)">
            <summary>
            Clear's a variable's value
            </summary>
            <param name="key">
            variable name
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.ToString">
            <summary>
            gets a string representation of this expression
            </summary>
            <returns>
            The to string.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.OperatorPrecedence(System.String)">
            <summary>
            This method gets the precedence of a binary operator
            </summary>
            <param name="strOp">Operation code</param>
            <returns>
            The operator precedence.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.PerformBinaryOp(Tenaris.Library.Framework.Scripting.ExpressionEval.BinaryOp,System.Object,System.Object)">
            <summary>
            This routine will actually execute an operation and return its value
            </summary>
            <param name="op">
            Operator Information
            </param>
            <param name="v1">
            left operand
            </param>
            <param name="v2">
            right operand
            </param>
            <returns>
            v1 (op) v2
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.DoSpecialOperator(Tenaris.Library.Framework.Scripting.ExpressionEval.BinaryOp,System.Object,System.Object)">
            <summary>
            This will perform comparison operations based upon data type of value
            </summary>
            <param name="op">
            binary operator
            </param>
            <param name="v1">
            left operand
            </param>
            <param name="v2">
            right operand
            </param>
            <returns>
            return result of operator
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.PerformUnaryOp(Tenaris.Library.Framework.Scripting.ExpressionEval.UnaryOp,System.Object)">
            <summary>
            This routine will actually execute an operation and return its value
            </summary>
            <param name="op">
            Operator Information
            </param>
            <param name="v">
            Right operand
            </param>
            <returns>
            The result of evaluation the given operation on the given object.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.ExecuteEvaluation">
            <summary>
            Sorts the mathmatical operations to be executed
            </summary>
            <returns>
            The execute evaluation.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.NextToken(System.Int32)">
            <summary>
            This will search the expression for the next token (operand, operator, etc)
            </summary>
            <param name="index">
            Start Position of Search
            </param>
            <returns>
            First character index after token.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.EvaluateList">
            <summary>
            Traverses the list to perform operations on items according to operator precedence
            </summary>
            <returns>
            final evaluated expression of Expression string
            </returns>
        </member>
        <member name="E:Tenaris.Library.Framework.Scripting.ExpressionEval.AdditionalFunctionEventHandler">
            <summary>
            This event will trigger for every function that is not intercepted internally
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.ExpressionEval.Expression">
            <summary>
            Gets or sets the expression to be evaluated.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.ExpressionEval.Variables">
            <summary>
            Gets or sets variable list.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Scripting.ExpressionEval.BinaryOp">
            <summary>
            This structure is used internally to order operations
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.BinaryOp.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Scripting.ExpressionEval.BinaryOp"/> class.
            </summary>
            <param name="strOp">
            The str op.
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.BinaryOp.ToString">
            <summary>
            Overrides the object ToString() method.
            </summary>
            <returns>
            The string representing the object.
            </returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.ExpressionEval.BinaryOp.Op">
            <summary>
            Gets the operation code.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.ExpressionEval.BinaryOp.Precedence">
            <summary>
            Gets Precedence.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Scripting.ExpressionEval.BinaryOpQueue">
            <summary>
            Queueing binary operations
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.BinaryOpQueue.#ctor(System.Collections.ArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Scripting.ExpressionEval.BinaryOpQueue"/> class.
            </summary>
            <param name="expressionList">
            The expression list.
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.BinaryOpQueue.Enqueue(Tenaris.Library.Framework.Scripting.ExpressionEval.BinaryOp)">
            <summary>
            The enqueue.
            </summary>
            <param name="op">
            The operation to enqueue.
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.BinaryOpQueue.Dequeue">
            <summary>
            The dequeue.
            </summary>
            <returns>
            The binary operation.
            </returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.ExpressionEval.BinaryOpQueue.Count">
            <summary>
            Gets Count.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Scripting.ExpressionEval.UnaryOp">
            <summary>
            This structure is used internally to order operations
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.UnaryOp.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Scripting.ExpressionEval.UnaryOp"/> class.
            </summary>
            <param name="strOp">
            The str op.
            </param>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.ExpressionEval.UnaryOp.Op">
            <summary>
            Gets operation code.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Scripting.ExpressionEval.Variable">
            <summary>
            used to specify variables
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.Variable.#ctor(System.String,System.Collections.Hashtable)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Scripting.ExpressionEval.Variable"/> class.
            </summary>
            <param name="expression">The expression.</param>
            <param name="vals">The vals.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.ExpressionEval.Variable.Evaluate">
            <summary>
            Evaluates the expression.
            </summary>
            <returns>
            The evaluation result.
            </returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.ExpressionEval.Variable.Expression">
            <summary>
            Gets or sets Expression.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Scripting.FireAdditionalFunction">
            <summary>
            The additional function event handler.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            Additional function event args.
            </param>
        </member>
        <member name="T:Tenaris.Library.Framework.Scripting.FunctionEval">
            <summary>
            This class provides functionality for evaluating functions
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.FunctionEval.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Scripting.FunctionEval"/> class. 
            Initializes the Expression Property
            </summary>
            <param name="expression">
            Expression to evaluate
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.FunctionEval.Evaluate(System.String)">
            <summary>
            Evaluates a string expression of a function
            </summary>
            <param name="expression">The expression to be evaluated.
            </param>
            <returns>
            evauluated value
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.FunctionEval.Evaluate(System.String,Tenaris.Library.Framework.Scripting.FireAdditionalFunction)">
            <summary>
            Evaluates a string expression of a function
            </summary>
            <param name="expression">The expression to be evaluated.
            </param>
            <param name="handler">
            attach a custom function handler
            </param>
            <returns>
            evauluated value
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.FunctionEval.Replace(System.String)">
            <summary>
            This routine will replace functions existing in a input string with thier respective values
            </summary>
            <param name="input">
            input string
            </param>
            <returns>
            input string with all found functions replaced with returned values
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.FunctionEval.Replace(System.String,Tenaris.Library.Framework.Scripting.FireAdditionalFunction)">
            <summary>
            This routine will replace functions existing in a input string with thier respective values
            </summary>
            <param name="input">
            input string
            </param>
            <param name="handler">
            Additional function handler for custom functions
            </param>
            <returns>
            input string with all found functions replaced with returned values
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.FunctionEval.Iif(System.Object[])">
            <summary>
            Does the work for the IIF function
            </summary>
            <param name="parameters">
            parameters first is condition, 
            second is val if true, 
            third is val if false
            </param>
            <returns>
            params 2 if param 1 is true, otherwise param 3
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.FunctionEval.Case(System.Object[])">
            <summary>
            Executes a case/when statement
            </summary>
            <param name="parameters">
            condition, val, condition2, val2, ...
            </param>
            <returns>
            returns the parameter after the first condition parameter that evaluates to true
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.FunctionEval.Evaluate">
            <summary>
            Evaluates the Expression
            </summary>
            <returns>
            The evaluate.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.FunctionEval.ReplaceEx(System.String)">
            <summary>
            Since the static replace will not allow a second Replace(string), Replace(ex) will do so with
            this instance (so that variables will work)
            </summary>
            <param name="input">
            input string
            </param>
            <returns>
            filtered string
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.FunctionEval.Replace">
            <summary>
            This routine will replace functions existing in the Expression property with thier respective values
            </summary>
            <returns>
            Expression string with all found functions replaced with returned values
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.FunctionEval.SetVariable(System.String,System.Object)">
            <summary>
            Sets a variable's value
            </summary>
            <param name="key">
            variable name
            </param>
            <param name="value">
            variable value
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.FunctionEval.ClearVariable(System.String)">
            <summary>
            Clear's a variable's value
            </summary>
            <param name="key">
            variable name
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.FunctionEval.ToString">
            <summary>
            string override, return Expression property
            </summary>
            <returns>
            returns Expression property
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.FunctionEval.AdditionalFunctionHelper(System.String,System.Object[])">
            <summary>
            This method helps fire the event for any function not intercepted internally
            </summary>
            <param name="name">
            Name of the function
            </param>
            <param name="values">
            Function parameters.
            </param>
            <returns>
            returned from event
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.FunctionEval.GetParameters(System.Text.RegularExpressions.Capture)">
            <summary>
            Returns the parameters of a function
            </summary>
            <param name="m">
            regex math value.
            </param>
            <returns>
            An array with function parameters.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Scripting.FunctionEval.ExecuteFunction(System.String,System.Object[])">
            <summary>
            Executes the function based upon the name of the function
            </summary>
            <param name="name">
            name of the function to execute
            </param>
            <param name="p">
            parameter list
            </param>
            <returns>
            returned value of executed function
            </returns>
        </member>
        <member name="E:Tenaris.Library.Framework.Scripting.FunctionEval.AdditionalFunctionEventHandler">
            <summary>
            This event will trigger for every function that is not intercepted internally
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.FunctionEval.Variables">
            <summary>
            Gets or sets Variables.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Scripting.FunctionEval.Expression">
            <summary>
            Gets or sets the expression to be evaluated
            </summary>
            <value></value>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.DispatchableAttribute">
            <summary>
            Dispatchable attribute for method binding
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.PacketReader">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.PacketReader.#ctor(System.Byte[],System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Tcp.PacketReader"/> class.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.PacketReader.Get``1">
            <summary>
            ask for new packet data
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.PacketReader.Get">
            <summary>
            ask for new packet data
            </summary>
            <returns></returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.PacketReader.Exception">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Tenaris.Library.Framework.Tcp.PacketReader"/> is exception.
            </summary>
            <value>
              <c>true</c> if exception; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.PacketWriter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.PacketWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Tcp.PacketWriter"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.PacketWriter.HasAnswer">
            <summary>
            Determines whether this instance has answer.
            </summary>
            <returns>
              <c>true</c> if this instance has answer; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.PacketWriter.GetBuffer">
            <summary>
            Gets the buffer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.PacketWriter.Get``1">
            <summary>
            ask for new packet data
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.PacketWriter.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.PacketWriter.Length">
            <summary>
            Gets the length.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.TcpBaseEventArgs">
            <summary>
             base class for tcp events
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpBaseEventArgs.BasePacket">
            <summary>
             base packet data holder
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.TcpBaseEventArgs`1">
            <summary>
             generic class for tcp events
            </summary>
            <typeparam name="T">packet type</typeparam>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBaseEventArgs`1.#ctor(`0)">
            <summary>
             constructor
            </summary>
            <param name="packet">packet data</param>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpBaseEventArgs`1.Packet">
            <summary>
             packet data
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.TcpDispatchEvent`1">
            <summary>
             tcp event delegate
            </summary>
            <param name="sender">dispatcher object</param>
            <param name="e">packet data container</param>
            <typeparam name="T">packet type</typeparam>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.TcpBasePeer">
            <summary>
            base class for implementing client and server tcp peers
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.ITcpReceiverEvents">
            <summary>
            ITcpReceiverEvents interface.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.ITcpConnectorEvents">
            <summary>
            ITcpConnectorEvents interface.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.ITcpConnectorEvents.ConnectionEstablished(Tenaris.Library.Framework.Tcp.TcpConnector)">
            <summary>
            Establish connection.
            </summary>
            <param name="sender">TCP sender.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.ITcpConnectorEvents.ConnectionClosed(Tenaris.Library.Framework.Tcp.TcpConnector,System.Boolean)">
            <summary>
            Close connection.
            </summary>
            <param name="sender">TCP sender.</param>
            <param name="lost">Lost flag.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.ITcpReceiverEvents.DataReceived(Tenaris.Library.Framework.Tcp.TcpReceiver,System.Byte[],System.Int32)">
            <summary>
            Data received.
            </summary>
            <param name="sender">TCP sender.</param>
            <param name="buffer">Data buffer.</param>
            <param name="size">Data size.</param>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpBasePeer.HeaderSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpBasePeer.HeaderSizeCrc">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBasePeer.Activate">
            <summary>
            Activates this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBasePeer.PostPacket(System.Int32,System.Object)">
            <summary>
            Posts the packet.
            </summary>
            <param name="id">The id.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBasePeer.PostPacket(System.Object)">
            <summary>
            Posts the packet.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBasePeer.Deactivate">
            <summary>
            Deactivates this instance.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBasePeer.SetupServerSide(System.Net.Sockets.Socket,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Tcp.TcpBasePeer"/> class.
            </summary>
            <param name="socket">The socket.</param>
            <param name="foreignBind">true to bind with itself</param>
            <param name="backgroundProcessing">true if client calls should be processed in background</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBasePeer.SetupClientSide(System.String,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Tcp.TcpBasePeer"/> class.
            </summary>
            <param name="address">The address.</param>
            <param name="foreignBind">true to bind with itself</param>
            <param name="backgroundProcessing">true if client calls should be processed in background</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBasePeer.SendPacket``2">
            <summary>
            Sends the packet.
            </summary>
            <typeparam name="TQry">The type of the qry.</typeparam>
            <typeparam name="TAns">The type of the ans.</typeparam>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBasePeer.SendPacket``1(System.Object,System.Int32)">
            <summary>
            Sends the packet.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data">The data.</param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBasePeer.SendPacket``1(System.Int32,System.Object,System.Int32)">
            <summary>
            Sends the packet.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id">The id.</param>
            <param name="data">The data.</param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBasePeer.Tenaris#Library#Framework#Tcp#ITcpReceiverEvents#DataReceived(Tenaris.Library.Framework.Tcp.TcpReceiver,System.Byte[],System.Int32)">
            <summary>
            Data received.
            </summary>
            <param name="sender">TCP sender.</param>
            <param name="buffer">Data buffer.</param>
            <param name="size">Data size.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBasePeer.Enqueue(System.Object)">
            <summary>
            Enqueues the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBasePeer.Tenaris#Library#Framework#Tcp#ITcpConnectorEvents#ConnectionEstablished(Tenaris.Library.Framework.Tcp.TcpConnector)">
            <summary>
            Establish connection.
            </summary>
            <param name="sender">TCP sender.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBasePeer.Tenaris#Library#Framework#Tcp#ITcpConnectorEvents#ConnectionClosed(Tenaris.Library.Framework.Tcp.TcpConnector,System.Boolean)">
            <summary>
            Close connection.
            </summary>
            <param name="sender">TCP sender.</param>
            <param name="lost">Lost flag.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBasePeer.DoDeactivate">
            <summary>
            Does the deactivate.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBasePeer.UnhandledQueueItem(System.Object)">
            <summary>
            Method to call for unhandled items inside queue.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBasePeer.DoConnectionEstablished(Tenaris.Library.Framework.Tcp.TcpConnector)">
            <summary>
            Does the connection established.
            </summary>
            <param name="connector">The connector.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBasePeer.DoConnectionClosed(Tenaris.Library.Framework.Tcp.TcpConnector,System.Boolean)">
            <summary>
            Does the connection closed.
            </summary>
            <param name="connector">The connector.</param>
            <param name="lost">if set to <c>true</c> [lost].</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBasePeer.BindMethods(System.Object)">
            <summary>
            Binds the methods.
            </summary>
            <param name="handler">The handler.</param>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpBasePeer.Connected">
            <summary>
            Gets a value indicating whether this <see cref="T:Tenaris.Library.Framework.Tcp.TcpBasePeer"/> is connected.
            </summary>
            <value>
              <c>true</c> if connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpBasePeer.Receiver">
            <summary>
            Gets the internal TcpReceiver.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpBasePeer.BackgroundProcessing">
            <summary>
            Enables/Disables concurrent remote calls processing
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.IPacketCompletion">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.IPacketCompletion.GetSize(System.Byte[])">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <returns>returns -1 for incomplete packet; -2 for corrupt packet; greater than 0 for complete packet</returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.TcpBuffer">
            <summary>
            Stores array of bytes and has the ability to append and extract slices in order to get completed packets.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpBuffer.buffer">
            <summary>
            Buffer data.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBuffer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Tcp.TcpBuffer"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBuffer.#ctor(Tenaris.Library.Framework.Tcp.TcpBuffer.TcpSizeDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Tcp.TcpBuffer"/> class.
            </summary>
            <param name="completer">TCP completer.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBuffer.#ctor(Tenaris.Library.Framework.Tcp.IPacketCompletion)">
            <summary>
            
            </summary>
            <param name="completer"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBuffer.Push(System.Byte[],System.Int32)">
            <summary>
            Pushes data.
            </summary>
            <param name="data">Data to push.</param>
            <param name="size">Data size.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBuffer.Pop(System.Byte[]@)">
            <summary>
            Pops data.
            </summary>
            <param name="destination">Destination data buffer.</param>
            <returns>A value indicating if data was succesfullt poped.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBuffer.Reset">
            <summary>
            Resets the buffer.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpBuffer.GetSize(System.Byte[])">
            <summary>
            Gets the size.
            </summary>
            <param name="buffer">Data buffer.</param>
            <returns>Buffer size.</returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpBuffer.Completer">
            <summary>
            Gets or sets the completer.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpBuffer.PacketCompletion">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.TcpBuffer.TcpSizeDelegate">
            <summary>
            Gets a TCP buffer size.
            </summary>
            <param name="buffer">Data buffer.</param>
            <returns>TCP size.</returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.TcpConnector">
            <summary>
            TcpConnector class.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpConnector.host">
            <summary>
            Host name.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpConnector.port">
            <summary>
            Port number.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpConnector.buffer">
            <summary>
            TCP buffer.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpConnector.socket">
            <summary>
            TCP socket.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpConnector.connectedNotified">
            <summary>
            Connected status was notified.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpConnector.listener">
            <summary>
            TCP listener.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.Activate(System.Object)">
            <summary>
            Sets a listener and activates the connector.
            </summary>
            <param name="listener">The listener.</param>
            <returns>
            A result  flag.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.Activate">
            <summary>
            Activates the connector.
            </summary>
            <returns>
            A result  flag.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.Deactivate">
            <summary>
            Deactivates the listener.
            </summary>
            <returns>A result flag.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.Read(System.Byte[]@,System.Int32@)">
            <summary>
            Reads a buffer.
            </summary>
            <param name="buffer">Destination buffer.</param>
            <param name="size">Size to read.</param>
            <returns>A result flag.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.Read(System.Byte[],System.Int32)">
            <summary>
            Reads a buffer.
            </summary>
            <param name="buffer">Buffer to read.</param>
            <param name="size">Size tor ead.</param>
            <returns>Read value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.ByteArrayToString(System.Byte[],System.Int32)">
            <summary>
            Converts array to string.
            </summary>
            <param name="buffer">Data buffer.</param>
            <param name="size">Data size.</param>
            <returns>Data string.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.StringToByteArray(System.String)">
            <summary>
            Converts string to array.
            </summary>
            <param name="buffer">Data buffer.</param>
            <returns>Bytes array.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.ParseAddress(System.String,System.String@,System.Int32@)">
            <summary>
            Parse an address.
            </summary>
            <param name="address">IP address.</param>
            <param name="host">Host name.</param>
            <param name="port">Port number.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.Resolve(System.String)">
            <summary>
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a buffer.
            </summary>
            <param name="buffer">Buffer data.</param>
            <param name="offset">Offset from buffer.</param>
            <param name="size">Size of data to write.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.Write(System.Byte[],System.Int32)">
            <summary>
            Writes a buffer.
            </summary>
            <param name="buffer">Buffer data.</param>
            <param name="size">Size to write.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.Read(System.Net.Sockets.Socket,System.Byte[]@,System.Int32@)">
            <summary>
            Reads a buffer from a client.
            </summary>
            <param name="client">Source client.</param>
            <param name="buffer">Destination buffer.</param>
            <param name="size">Size to read.</param>
            <returns>A return flag.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.CreateSocket">
            <summary>
            Creates a new socket.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.ConnectSocket">
            <summary>
            Connnects the socket.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.DisconnectSocket">
            <summary>
            Disconnects the socket.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.Connect">
            <summary>
            Connects the socket.
            </summary>
            <returns>A result flag.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.Disconnect(System.Boolean)">
            <summary>
            Disconnects the socket.
            </summary>
            <param name="lost">Lost flag.</param>
            <returns>A result flag.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.FireDisconnected(System.Boolean)">
            <summary>
            Forces disconnection.
            </summary>
            <param name="lost">Lost flag.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Tcp.TcpConnector"/> class.
            </summary>
            <param name="host">Host name.</param>
            <param name="port">Port number.</param>
            <param name="sendTimeout">Time out.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Tcp.TcpConnector"/> class.
            </summary>
            <param name="client">TCP client.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpConnector.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Tcp.TcpConnector"/> class.
            </summary>
            <param name="address">IP address.</param>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpConnector.Host">
            <summary>
            Gets the host.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpConnector.Port">
            <summary>
            Gets the port number.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpConnector.Socket">
            <summary>
            Gets or sets the socket.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpConnector.LocalHost">
            <summary>
            Gets the localhost name.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpConnector.LocalPort">
            <summary>
            Gets the local port number.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpConnector.Completer">
            <summary>
            Gets or sets the completer.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpConnector.PacketCompletion">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpConnector.Connected">
            <summary>
            Gets a value indicating whether it is connected or not.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpConnector.SendTimeout">
            <summary>
            Time out.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpConnector.ReceiveTimeout">
            <summary>
            Receive timeout.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.ITcpListenerEvents">
            <summary>
            ITcpListenerEvents interface.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.ITcpListenerEvents.ClientConnected(Tenaris.Library.Framework.Tcp.TcpServer,System.Net.Sockets.Socket)">
            <summary>
            Client connected.
            </summary>
            <param name="sender">TCP sender.</param>
            <param name="socket">TCP client.</param>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.TcpReceiver">
            <summary>
            TcpReceiver class.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpReceiver.MillisecondsConstant">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpReceiver.receiverHost">
            <summary>
            Receiver host name.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpReceiver.receiverPort">
            <summary>
            Receiver port number.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpReceiver.thread">
            <summary>
            Current thread.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpReceiver.listener">
            <summary>
            TCP listener.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpReceiver.stop">
            <summary>
            Is stopped.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpReceiver.receiver">
            <summary>
            TCP receiver.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpReceiver.localClient">
            <summary>
            True if connection is initiated from local host
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpReceiver.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Tcp.TcpReceiver"/> class.
            </summary>
            <param name="address">IP address.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpReceiver.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Tcp.TcpReceiver"/> class.
            </summary>
            <param name="client">TCP client.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpReceiver.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Tcp.TcpReceiver"/> class.
            </summary>
            <param name="sndAddress">IP address.</param>
            <param name="rcvAddress">Receiver address.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpReceiver.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Tcp.TcpReceiver"/> class.
            </summary>
            <param name="host">Host name.</param>
            <param name="port">Port number.</param>
            <param name="sendTimeout">Send timeout.</param>
            <param name="receiveTimeout">Receiver timeout.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpReceiver.ToString">
            <summary>
            Convert an object to string.
            </summary>
            <returns>Resuilt string.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpReceiver.Activate(System.Object)">
            <summary>
            Activates the listener.
            </summary>
            <param name="listener">The p listener.</param>
            <returns>
            A return flag.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpReceiver.Deactivate">
            <summary>
            Deactivates a listener.
            </summary>
            <returns>A result flag.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpReceiver.CreateSocket">
            <summary>
            Creates a new socket.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpReceiver.ConnectSocket">
            <summary>
            Connects to a socket.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpReceiver.DisconnectSocket">
            <summary>
            Disconnects from a socket.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpReceiver.Execute">
            <summary>
            Executes a command.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpReceiver.FireReceiveData(System.Byte[],System.Int32)">
            <summary>
            Executes the received data.
            </summary>
            <param name="buffer">Data buffer.</param>
            <param name="size">Data size.</param>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpReceiver.ReceiverHost">
            <summary>
            Gets the reveiver host.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpReceiver.ReceiverPort">
            <summary>
            Gets the receiver port.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpReceiver.ReceiverLocalHost">
            <summary>
            Gets the receiver local host name.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpReceiver.ReceiverLocalPort">
            <summary>
            Gets the receiver local port.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpReceiver.Connected">
            <summary>
            Gets a value indicating whether it is connected.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.TcpServer">
            <summary>
            TcpServer class.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpServer.MillisecondsConstant">
            <summary>
            Milliseconds constant
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpServer.thread">
            <summary>
            Current thread.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpServer.stop">
            <summary>
            Stop flag.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpServer.server">
            <summary>
            Listener server.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Tcp.TcpServer.listener">
            <summary>
            Listener events.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpServer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Tcp.TcpServer"/> class.
            </summary>
            <param name="address">IP addres.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpServer.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Tcp.TcpServer"/> class.
            </summary>
            <param name="host">Host name.</param>
            <param name="port">Port number.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpServer.Activate(Tenaris.Library.Framework.Tcp.ITcpListenerEvents)">
            <summary>
            Activates the port.
            </summary>
            <param name="listener">Event listener.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpServer.Deactivate">
            <summary>
            Deactivates the port.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpServer.FireClientConnected(System.Net.Sockets.Socket)">
            <summary>
            Executes when client is connected.
            </summary>
            <param name="client">TCP client.</param>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpServer.Host">
            <summary>
            Host name.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpServer.Port">
            <summary>
            Port number.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpServer.IsListening">
            <summary>
            true if it is listening
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Tcp.TcpServerListener">
            <summary>
            TcpBasePeer listener
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpServerListener.#ctor(System.String,Tenaris.Library.Framework.Tcp.ITcpListenerEvents)">
            <summary>
            constructor
            <param name="listenAddress">tcp address for listening</param>
            <param name="listener">client connection event</param>
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpServerListener.Activate">
            <summary>
            starts listening
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpServerListener.Deactivate">
            <summary>
            stops listening
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpServerListener.RemoveClient(Tenaris.Library.Framework.Tcp.TcpBasePeer)">
            <summary>
            remove a TcpBasePeer client
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Tcp.TcpServerListener.AppendClient(Tenaris.Library.Framework.Tcp.TcpBasePeer,System.Boolean)">
            <summary>
            appends a TcpBasePeer client
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpServerListener.ListeningHost">
            <summary>
            address where is listening
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpServerListener.ListeningPort">
            <summary>
            port where is listening
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpServerListener.IsListening">
            <summary>
            true if it is listening
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Tcp.TcpServerListener.Clients">
            <summary>
            Gets the clients.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Text.NamedFormatter">
            <summary>
            An extension to the String.Format. It replaces the index based placeholder with named placeholders.
            Basically you give to this function a format string just like the one you give to String.Format but
            like this "{Name}, {LastName}. Age {Age:d2}". Then it will complete the data calling the properties
            of an object (in the previous example, you should pass to the function an object with a Name, LastName
            Age property.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Text.NamedFormatter.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Text.NamedFormatter"/> class. 
            Constructor for a named formmater.
            </summary>
            <param name="templateString">
            The string template. In the form of (example) "{Name}, {LastName}. Age {Age:d2}".
            </param>
            <param name="objectType">
            The type of the object to use further on to replace the template.
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.Text.NamedFormatter.Format(System.Object)">
            <summary>
            Formats the template given in the constructor with the given object data.
            </summary>
            <param name="value">The object to use as data source.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Text.NamedFormatter.Format(System.IFormatProvider,System.Object)">
            <summary>
            Formats the template given in the constructor with the given object data.
            </summary>
            <param name="formatProvider">The format provider to use.</param>
            <param name="value">The object to use as data source.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Text.StringExtensions">
            <summary>
            Named formatter StringExtensions methods.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Text.StringExtensions.Inject(System.String,System.IFormatProvider,System.Object,System.Boolean)">
            <summary>
            Encapsulate the use of NamedFormatter.Format. Just pass to the function the format and the object
            used as data source and it will replace the format string with the data in the object.
            </summary>
            <param name="format">The template string.</param>
            <param name="formatProvider">The format provider to use.</param>
            <param name="value">The object to use as data source.</param>
            <param name="cache">If true, the template will be cached to speed up (significantly) further calls.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Text.StringExtensions.Inject(System.String,System.Object,System.Boolean)">
            <summary>
            Encapsulate the use of NamedFormatter.Format. Just pass to the function the format and the object
            used as data source and it will replace the format string with the data in the object.
            </summary>
            <param name="format">The template string.</param>
            <param name="value">The object to use as data source.</param>
            <param name="cache">If true, the template will be cached to speed up (significantly) further calls.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Text.StringExtensions.Inject(System.String,System.Object)">
            <summary>
            Encapsulate the use of NamedFormatter.Format. Just pass to the function the format and the object
            used as data source and it will replace the format string with the data in the object. It will
            cache all the type info necessary to speed up further calls to this method.
            </summary>
            <param name="format">The template string.</param>
            <param name="value">The object to use as data source.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Text.StringExtensions.Append(System.String,System.String,System.String)">
            <summary>
            Appends a <paramref name="newvalue"/> to an existing string separated by the given separator. 
            The separator is added only if the existing string is non empty.
            </summary>
            <param name="value">
            The existing string value to which this methods applies.
            </param>
            <param name="newvalue">
            The newvalue being appended.
            </param>
            <param name="separator">
            The separator value to use.
            </param>
            <returns>
            The new string formed by the exising value and the separator if the former is non empty, and the newvalue appended.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Text.StringExtensions.AppendValue(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            Appends a string <paramref name="value"/> to an <see cref="T:System.Text.StringBuilder"/> separated by the given separator. 
            The separator is added only if the existing StringBuilder is not empty.
            </summary>
            <param name="builder">
            The StringBuilder to which this methods applies.
            </param>
            <param name="value">
            The value being appended.
            </param>
            <param name="separator">
            The separator value to use.
            </param>
            <returns>
            The new string formed by the exising value and the separator if the former is non empty, and the newvalue appended.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Text.StringExtensions.AppendValue(System.Text.StringBuilder,System.String,System.String,System.Object[])">
            <summary>
            Formats a string <paramref name="format"/> value and then appends it to a <see cref="T:System.Text.StringBuilder"/> separated by the given separator. 
            The separator is added only if the existing StringBuilder is not empty.
            </summary>
            <param name="builder">
              The StringBuilder to which this methods applies.
            </param>
            <param name="separator">
              The separator value to use.
            </param>
            <param name="format">
              The format string value.
            </param>
            <param name="args">
              The arguments used for formatting.
            </param>
            <returns>
            The new string formed by the existing value and the separator if the former is non empty, and the new value appended.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Text.StringExtensions.Capitalize(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Capitalizes the first letter of each string in the <paramref name="words"/> sequence.
            </summary>
            <param name="words">
            The sequence to which this method applies.
            </param>
            <returns>
            An enumerable sequence with each element in <paramref name="words"/> capitalized.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Text.StringExtensions.ToPascalCase(System.String)">
            <summary>
            Converts the given arbitrary string phrase to a new string complying with the rules of PascalCase capitalization.
            </summary>
            <param name="phrase">
            The phrase to convert.
            </param>
            <returns>
            The phrase converted to pascal-case.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Text.StringExtensions.ToCamelCase(System.String)">
            <summary>
            Converts the given arbitrary string phrase to a new string complying with the rules of camelCase capitalization.
            </summary>
            <param name="phrase">
            The phrase to convert.
            </param>
            <returns>
            The phrase converted to camel-case.
            </returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Threading.ThreadExtensions">
            <summary>
            Thread class extension methods.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.ThreadExtensions.Join(System.Collections.Generic.IEnumerable{System.Threading.Thread})">
            <summary>
            Waits for all threads in the sequence to terminate using Thread.Join() on them.
            </summary>
            <param name="threads">
            The instance to which method applies.
            </param>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.ThreadExtensions.ThreadExitCallback(System.Threading.Thread,System.Threading.ContextCallback,System.Object)">
            <summary>
            Callback passed to this method will be invoked on thread exit. State is a context object with
            user defined data.
            </summary>
            <param name="thread">The thread on which the method is executed.</param>
            <param name="callback"> The callback to call upon thread finalization.</param>
            <param name="state">The user defined object to pass to the callback on invocation.</param>
        </member>
        <member name="T:Tenaris.Library.Framework.Threading.ThreadExtensions.ThreadExitCallbackContext">
            <summary>
            Represents a set of callback to call when the specified thread ends.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Threading.WorkerCore">
            <summary>
            WorkerCore Class
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Threading.WorkerCore"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerCore.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Threading.WorkerCore"/> class.
            </summary>
            <param name="idleTimeOut">The idle time out.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerCore.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Threading.WorkerCore"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerCore.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Threading.WorkerCore"/> class.
            </summary>
            <param name="idleTimeOut">The idle time out.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerCore.Start(Tenaris.Library.Framework.Threading.PoolledWorker)">
            <summary>
            Starts the specified worker.
            </summary>
            <param name="worker">The worker.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerCore.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerCore.CancelDisposing">
            <summary>
            Cancels the disposing.
            </summary>
        </member>
        <member name="E:Tenaris.Library.Framework.Threading.WorkerCore.Started">
            <summary>
            Occurs when [started].
            </summary>
        </member>
        <member name="E:Tenaris.Library.Framework.Threading.WorkerCore.Finished">
            <summary>
            Occurs when [finished].
            </summary>
        </member>
        <member name="E:Tenaris.Library.Framework.Threading.WorkerCore.Disposed">
            <summary>
            Occurs when [disposed].
            </summary>
        </member>
        <member name="E:Tenaris.Library.Framework.Threading.WorkerCore.Disposing">
            <summary>
            Occurs when [disposing].
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Threading.WorkerPool">
            <summary>
            WorkerPool Class
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerPool.CreateWorker">
            <summary>
            Creates the worker.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerPool.CreateWorker(System.Boolean)">
            <summary>
            
            </summary>
            <param name="flowContext"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerPool.Enqueue(Tenaris.Library.Framework.Threading.Worker)">
            <summary>
            Enqueues the specified worker.
            </summary>
            <param name="worker">The worker.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerPool.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Threading.WorkerPool"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerPool.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Threading.WorkerPool"/> class.
            </summary>
            <param name="maxCores">The max cores.</param>
            <param name="maxAvailable">The max available.</param>
            <param name="maxTimeIdle">The max time idle.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerPool.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Tenaris.Library.Framework.Threading.WorkerPool"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerPool.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Threading.WorkerPoolManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerPoolManager.RegisterPool(Tenaris.Library.Framework.Threading.WorkerPool)">
            <summary>
            Registers the pool.
            </summary>
            <param name="pool">The pool.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerPoolManager.UnRegisterPool(Tenaris.Library.Framework.Threading.WorkerPool)">
            <summary>
            Uns the register pool.
            </summary>
            <param name="pool">The pool.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerPoolManager.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerPoolManager.CreateCore">
            <summary>
            Creates the core.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Threading.WorkerPoolManager.CreateCore(System.Int32,System.Boolean)">
            <summary>
            Creates the core.
            </summary>
            <param name="idletimeout">The idletimeout.</param>
            <returns></returns>
        </member>
        <member name="E:Tenaris.Library.Framework.Threading.WorkerPoolManager.WorkerFree">
            <summary>
            Occurs when [worker free].
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Threading.WorkerPoolManager.GlobalPool">
            <summary>
            Gets the global pool.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Threading.WorkerPoolManager.WorkerCounts">
            <summary>
            Gets the worker counts.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Threading.WorkerPoolManager.MaximumWorkers">
            <summary>
            Gets or sets the maximum workers.
            </summary>
            <value>
            The maximum workers.
            </value>
        </member>
        <member name="T:Tenaris.Library.Framework.Utility.Activator.Factory">
            <summary>
            Class to provide dynamic instance creation facilities
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Activator.Factory.Create``1(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)">
            <summary>
            Creates a new instance of type T using the default constructor.
            </summary>
            <param name="type">The type to create.</param>
            <param name="bindingFlags">The binding flags to pass to Activator.CreateInstance</param>
            <param name="binder">The binder obejct to pass to Activator.CreateInstance</param>
            <param name="cultureInfo">The CultureInfo to pass to Activator.CreateInstance</param>
            <typeparam name="TReturnType">The type to return.</typeparam>
            <returns>The new created instance.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Activator.Factory.Create``1(System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Instantiates T without calling a constructor.
            Works well with otherwise uninstantiable objects.
            </summary>
            <typeparam name="TReturnType">Anything that does NOT derive
            from ContextBoundObject.</typeparam>
            <param name="values">A dictionary of values to initialize
            the object in place of a constructor.</param>
            <param name="strict">If set to true (default value) an exceptino will be thrown if there are more
            parameters specified in values that the ones the class has or if the parameters are not assignables
            to the class fields or properties.</param>
            <returns>The newly created and instantiated object.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Activator.Factory.Create``1(System.Type,System.Object[],System.Reflection.BindingFlags)">
            <summary>
            Creates a new instance of type T using the default constructor
            </summary>
            <param name="type">The type to create.</param>
            <param name="bindingFlags">The binding flags to pass to Activator.CreateInstance</param>
            <param name="args">The arguments to pass to the constructor</param>
            <typeparam name="TReturnType">The type to create</typeparam>
            <returns>The new created instance</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Activator.Factory.Create``2(System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)">
            <summary>
            Creates a new instance of T using the default constructor
            </summary>
            <param name="bindingFlags">The binding flags to pass to Activator.CreateInstance</param>
            <param name="binder">The binder obejct to pass to Activator.CreateInstance</param>
            <param name="cultureInfo">The CultureInfo to pass to Activator.CreateInstance</param>
            <typeparam name="TCreatableType">The type to create</typeparam>
            <typeparam name="TReturnType">The type to return</typeparam>
            <returns>The new created instance</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Activator.Factory.Create``2(System.Object[],System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)">
            <summary>
            Creates a new instance of T using the default constructor
            </summary>
            <param name="bindingFlags">The Binding flags</param>
            <param name="binder">The Binder object</param>
            <param name="cultureInfo">A culture info</param>
            <param name="args">The arguments to pass to the constructor</param>
            <typeparam name="TCreatableType">The type to create</typeparam>
            <typeparam name="TReturnType">The type to return</typeparam>
            <returns>The new created instance</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Activator.Factory.Create``1(System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)">
            <summary>
            Creates a new instance of T using the default constructor
            </summary>
            <param name="bindingFlags">The binding flags to pass to Activator.CreateInstance</param>
            <param name="binder">The binder obejct to pass to Activator.CreateInstance</param>
            <param name="cultureInfo">The CultureInfo to pass to Activator.CreateInstance</param>
            <typeparam name="TCreatableType">The type to create and return</typeparam>
            <returns>The new created instance</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Activator.Factory.Create``1(System.Object[],System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)">
            <summary>
            Creates a new instance of T using the default constructor
            </summary>
            <param name="bindingFlags">The Binding flags</param>
            <param name="binder">The Binder object</param>
            <param name="cultureInfo">A culture info</param>
            <param name="args">The arguments to pass to the constructor</param>
            <typeparam name="TCreatableType">The type to create and return</typeparam>
            <returns>The new created instance</returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Utility.AppDomain.AppDomainNameAttribute">
            <summary>
            Attribute used to define the AppDomain name for when using cross-appdomain singletons. It will mark the AppDomain to use as host for the singleton
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.AppDomain.AppDomainNameAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tenaris.Library.Framework.Utility.AppDomain.AppDomainNameAttribute"/> class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.AppDomain.AppDomainNameAttribute.GetInstance(System.Reflection.MemberInfo)">
            <summary>
            
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Utility.AppDomain.AppDomainNameAttribute.AppDomainName">
            <summary>
            Gets or sets the AppDomain specified at creation time (or null).
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Utility.AppDomain.AppDomainNameAttribute.UseDefaultDomain">
            <summary>
            Gets or sets a value indicating whether to search for the default AppDomain or to used the default calling code's AppDomain.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Utility.AppDomain.InvalidTypeException">
            <summary>
            Exception raised when Type used to instantiate the ProcessSingleton class is invalid somehow
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.AppDomain.InvalidTypeException.#ctor">
            <summary>
            Creates a new instance of the InvalidTypeException with no message.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.AppDomain.InvalidTypeException.#ctor(System.String)">
            <summary>
            Creates a new instance of the InvalidTypeException the specified message.
            </summary>
            <param name="message">Message describing the error.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.AppDomain.InvalidTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of the InvalidTypeException the specified message and an inner exception.
            </summary>
            <param name="message">Message describing the error.</param>
            <param name="inner">Inner exception that caused the code to abort.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.AppDomain.InvalidTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the InvalidTypeException class with serialized data.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.Utility.AppDomain.Tool">
            <summary>
            Static class with utility methods related to the AppDomain class.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.AppDomain.Tool.Enumerate">
            <summary>
            Gets the list of AppDomains currently active.
            </summary>
            <returns>
            An enumerable sequence of AppDomain instances.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.AppDomain.Tool.GetAll">
            <summary>
            Gets a dictionary containing the active the AppDomains indexed by it friendly name.
            </summary>
            <returns>
            The active AppDomains indexed by friendly name.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.AppDomain.Tool.Find(System.String)">
            <summary>
            Tries to find an AppDomain instance searching by the specified friendly name
            </summary>
            <param name="friendlyName">The friendly name to find</param>
            <returns>The AppDomain found, or null otherwise</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.AppDomain.Tool.Find(System.Func{System.AppDomain,System.Boolean})">
            <summary>
            Tries to find an AppDomain instance searching by using a predicate on every AppDomain
            </summary>
            <param name="predicate">Code-block to evaluate on each AppDomain</param>
            <returns>The AppDomain found, or null otherwise</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.AppDomain.Tool.Find(System.Func{System.AppDomain,System.Boolean},System.AppDomain@)">
            <summary>
            Tries to find an AppDomain instance searching by using a predicate on every AppDomain
            </summary>
            <param name="predicate">Code-block to evaluate on each AppDomain</param>
            <param name="appDomain">The AppDomain found, or null otherwise</param>
            <returns>True is an AppDomain matches the search or False otherwise</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.AppDomain.Tool.Find(System.String,System.AppDomain@)">
            <summary>
            Tries to find an AppDomain instance searching by using a predicate on every AppDomain
            </summary>
            <param name="friendlyName">The friendly name to find</param>
            <param name="appDomain">The AppDomain found, or null otherwise</param>
            <returns>True is an AppDomain matches the search or False otherwise</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.AppDomain.Tool.GetDefault">
            <summary>
            Tries to find the global default AppDomain for the local process.
            </summary>
            <returns>The AppDomain instance which returned IsDefaultAppDomain() ==  true, or null if none did.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.AppDomain.Tool.GetDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)">
            <summary>
            Tries to find an AppDomain with the given name, and if not found then creates a new one based on the specified arguments.
            </summary>
            <param name="friendlyName">The AppDomain name</param>
            <param name="evidence">Evidence that establishes the identity of the code that runs in the AppDomain.</param>
            <param name="info">An object that contains intialization information.</param>
            <returns>The existing AppDomain or one newly created</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.AppDomain.Tool.GetDomain(System.String,System.AppDomainSetup,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.Policy.StrongName[])">
            <summary>
            Tries to find an AppDomain with the given name, and if not found then creates a new one based on the specified arguments.
            </summary>
            <param name="friendlyName">The AppDomain name</param>
            <param name="evidence">Evidence that establishes the identity of the code that runs in the AppDomain.</param>
            <param name="info">An object that contains intialization information.</param>
            <param name="grantSet">A default permission set granted to all assemblies loaded into the AppDomain that do not have specific rights.</param>
            <param name="fullTrustAssemblies">An array of strong names representing assemblies to fully trusted within the AppDomain.</param>
            <returns>The existing AppDomain or one newly created</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.AppDomain.Tool.GetDomain(System.String,System.AppDomain)">
            <summary>
            Tries to find an AppDomain with the given name, and if not found then creates a new one based on the specified arguments.
            </summary>
            <param name="friendlyName">The AppDomain name</param>
            <param name="parentDomain">The AppDomain used to copy the settings for the new one.</param>
            <returns>The existing AppDomain or one newly created</returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Utility.Conversion.CollectionConvert">
            <summary>
            CollectionConvert Class
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.CollectionConvert.ToReadOnlyDictionary``2(System.Collections.Generic.Dictionary{``0,``1})">
            <summary>
            Convert Dictionary to ReadOnlyDictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">The dictionary to convert.</param>
            <returns></returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Utility.Conversion.ConversionFailedException">
            <summary>
            Exception raised when an attempted conversion fails.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionFailedException.#ctor">
            <summary>
            Initializes the new instance with a default message text.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionFailedException.#ctor(System.String)">
            <summary>
            Initializes the new instance with the specified message text.
            </summary>
            <param name="message">The error message text.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes the new instance with the specified message text and an inner exception.
            </summary>
            <param name="message">The error message text.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ConversionFailedException class with serialized data.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions">
            <summary>
            Adds some useful conversions from/two builtin types.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions.ToInteger(System.String,System.Int32,System.Boolean)">
            <summary>
            Tries to convert the string value to an integer and if fails returns the specified default.
            </summary>
            <param name="text">The text to convert to integer.</param>
            <param name="defvalue">The default value to use in case the text is invalid.</param>
            <param name="raiseError">A boolean used to signal if exceptions in case of failed conversion are desired or no (default is no)</param>
            <exception cref="T:Tenaris.Library.Framework.Utility.Conversion.ConversionFailedException">Exception raised when the conversion fail and raiseError is true.</exception>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions.ToDouble(System.String,System.Double,System.Boolean)">
            <summary>
            Tries to convert the string value to an double and if fails returns the specified default.
            </summary>
            <param name="text">The text to convert to double.</param>
            <param name="defvalue">The default value to use in case the text is invalid.</param>
            <param name="raiseError">A boolean used to signal if exceptions in case of failed conversion are desired or no (default is no)</param>
            <exception cref="T:Tenaris.Library.Framework.Utility.Conversion.ConversionFailedException">Exception raised when the conversion fail and raiseError is true.</exception>
            <returns>The resulting converted value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions.ParseInteger(System.String)">
            <summary>
            Tries to parse a string text and return an integer value from it, if it fails to do so then returns null.
            </summary>
            <param name="text">The string text to parse.</param>
            <returns>The resulting converted value or null.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions.ParseDouble(System.String)">
            <summary>
            Tries to parse a string text and return a double from it, if it fails to do so then returns null.
            </summary>
            <param name="text">The string text to parse.</param>
            <returns>The resulting converted value or null.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions.ParseTimeSpan(System.String)">
            <summary>
            Tries to parse a string text and return a TimeSpan value from it, if it fails to do so then returns null.
            </summary>
            <param name="text">The string text to parse.</param>
            <returns>The resulting converted value or null.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions.ParseDateTime(System.String)">
            <summary>
            Tries to parse a string text and return a DateTime value from it, if it fails to do so then returns null.
            </summary>
            <param name="text">The string text to parse.</param>
            <returns>The resulting converted value or null.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions.AsDateTime(System.TimeSpan)">
            <summary>
            Converts a Time Span to a DateTime without Date information (i.e: the Date part is all zeroes)
            </summary>
            <param name="value">The origin TimeSpan value</param>
            <returns>Equivalent Time value in a DateTime</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions.AsInteger(System.DateTime,System.DateTime)">
            <summary>
            Converts the given DateTime value to an integer number which is stored as a number of secons since the specified DateTime offset.
            </summary>
            <param name="value">The source DateTime value to convert.</param>
            <param name="offset">The DateTime offset to use as a base.</param>
            <returns>An integer representing the number of seconds elapsed since the specified offset to the specified value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions.AsPosix(System.DateTime)">
            <summary>
            Converts the DateTime representation to the POSIX one (i.e. Seconds elapsed since 1st. January 1970)
            </summary>
            <param name="value">The source DateTime value to convert.</param>
            <returns>An integer value representing the same date in the POSIX format.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions.IsOrdinal(System.Type)">
            <summary>
              Returns an indication of whether the specified Type is one of the Ordinal integer types.
            </summary>
            <param name="type">
              The type being checked.
            </param>
            <returns>
              A value indicating whether the type is ordinal.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              When <paramref name="type"/> == null.
            </exception>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions.IsFloat(System.Type)">
            <summary>
              Returns an indication of whether the specified Type is one of the Floating point types.
            </summary>
            <param name="type">
              The type being checked.
            </param>
            <returns>
              A value indicating whether the type is floating point.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              When <paramref name="type"/> == null.
            </exception>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions.IsOrdinal``1(``0)">
            <summary>
              Returns an indication of whether the specified value is one of the Ordinal integer types.
            </summary>
            <typeparam name="TValueType">
              The type of value.
            </typeparam>
            <param name="value">
              The type being checked.
            </param>
            <returns>
              A value indicating whether the type is ordinal.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              When <paramref name="value"/> == null.
            </exception>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions.IsFloat``1(``0)">
            <summary>
              Returns an indication of whether the specified value is one of the Floating point types.
            </summary>
            <typeparam name="TValueType">
              The type of value.
            </typeparam>
            <param name="value">
              The type being checked.
            </param>
            <returns>
              A value indicating whether the type is floating point.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              When <paramref name="value"/> == null.
            </exception>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions.ToString(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Return a string representing the content of 'list' parameter. It shows every value separated by 'delimiter' value
            </summary>
            <param name="list">The list tha will be displayed.</param>
            <param name="delimeter">String used to separate each value of the list.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions.ToString(System.Collections.Generic.List{System.Int32},System.String)">
            <summary>
            Return a string representing the content of 'list' parameter. It shows every value separated by 'delimiter' value
            </summary>
            <param name="list">The list tha will be displayed.</param>
            <param name="delimeter">String used to separate each value of the list.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions.ToBitmapImage(System.Byte[])">
            <summary>
            Return bitmap image from byte array
            </summary>
            <param name="value">image byte array</param>
            <returns>bitmap image</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions.ToCommaSeparatedString(System.Collections.Generic.List{System.String},System.String)">
            <summary> 
            Creates a comma delimited string from an string ArrayList. 
            </summary> 
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.ConversionsExtensions.ToCommaSeparatedString(System.Collections.Generic.List{System.Int32},System.String)">
            <summary> 
            Creates a comma delimited string from an int ArrayList. 
            </summary> 
        </member>
        <member name="T:Tenaris.Library.Framework.Utility.Conversion.DbConvert">
            <summary>
            DbConvert class
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.DbConvert.ToInt(System.Object)">
            <summary>
            Toes the int.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.DbConvert.ToInt(System.Object,System.Int32)">
            <summary>
            Toes the int.
            </summary>
            <param name="value">The value.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.DbConvert.ToDouble(System.Object)">
            <summary>
            Toes the double.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.DbConvert.ToDouble(System.Object,System.Double)">
            <summary>
            Toes the double.
            </summary>
            <param name="value">The value.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.DbConvert.ToBool(System.Object)">
            <summary>
            Toes the bool.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.DbConvert.ToBool(System.Object,System.Boolean)">
            <summary>
            Toes the bool.
            </summary>
            <param name="value">The value.</param>
            <param name="defaultValue">if set to <c>true</c> [default value].</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.DbConvert.ToDateTimeOffset(System.Object)">
            <summary>
            Toes the date time offset.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.DbConvert.ToDateTimeOffset(System.Object,System.DateTimeOffset)">
            <summary>
            Toes the date time offset.
            </summary>
            <param name="value">The value.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Utility.Conversion.PlcConvert">
            <summary>
            PlcConvert class
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.PlcConvert.ToInt(System.UInt16,System.UInt16)">
            <summary>
            Convert a high/low pair of Int16 values in one Int32. 
            </summary>
            <param name="high">High value</param>
            <param name="low">Low value.</param>
            <returns>Int32 converted value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.PlcConvert.ToIntFromAUS(System.Int16,System.Int16)">
            <summary>
            Convert a high/low pair of Int16 values in one Int32 using the AUS algorith. (high * 10000) + low
            </summary>
            <param name="high">High value</param>
            <param name="low">Low value.</param>
            <returns>Int32 converted value.</returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.PlcConvert.ToByte(System.Int16,System.Int32)">
            <summary>
            Return a 8 bits part of a Int16 value.
            </summary>
            <param name="value">Source register.</param>
            <param name="offset">Offset to get the value. It must be 0 or 1.</param>
            <returns>The byte part of value.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">It is thrown when value if different to 0 or 1.</exception>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.PlcConvert.ToBit(System.Int16,System.Int32)">
            <summary>
            Return the bit value from value indicated by offset. 
            </summary>
            <param name="value">Source value.</param>
            <param name="offset">Indicates the number of bit.</param>
            <returns>Returns the bit value indicated by offset. It must be between 0 and 15.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">It is thrown when value is not between 0 and 15.</exception>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.PlcConvert.ToBit(System.Byte,System.Byte)">
            <summary>
            Return the bit value from value indicated by offset. 
            </summary>
            <param name="value">Source value.</param>
            <param name="offset">Indicates the number of bit.</param>
            <returns>Returns the bit value indicated by offset. It must be between 0 and 15.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">It is thrown when value is not between 0 and 7.</exception>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.PlcConvert.GetValue(System.Int16[],System.Int32,System.Int32,System.Int32,System.Double,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Return the value read and scaled from an short array by offset using the AUS requirements.
            </summary>
            <param name="array">Source array</param>
            <param name="offset">Start absolute position in the source array.</param>
            <param name="size">Amount of registers required to get the value. It must be 1 or 2.</param>
            <param name="precision">Amount of digits that will have the scaled value. By default it is 0.</param>
            <param name="bias">Value that is added to the scaled value.</param>
            <param name="byteOffset">Position of the required byte. It must be between 0 and 3. If it is null it won't be taking in acount.</param>
            <param name="bitOffset">Position of the required bit. It must be between 0 and 15. If it is null it won't be taking in acount.</param>
            <returns>Scaled value.</returns>
            <remarks>If size is 2 is not taking in acount the others parameters (bitOffset and byteOffset). 
            If byteOffset and bitOffset are not null it is taking in acount only bitOffset. 
            The scale algorithm is "(value / Math.Pow(10, precision)) + bias" where value could be a Int32, Int16, byte or bit.
            </remarks>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.Conversion.PlcConvert.ToByte(System.Object)">
            <summary>
            Return a value only if the type of value parameter is byte[]. Other way return null.
            </summary>
            <param name="value">Inpunt value.</param>
            <returns>Input value parameter or null depend on the parameter data type.</returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Utility.ExceptionExtensions">
            <summary>
            Defines extension methods for <see cref="T:System.Exception"/>
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.ExceptionExtensions.FullMessage(System.Exception,System.String)">
            <summary>
            Builds the string formed by all the chain of exceptions up to when innerException returns null.
            </summary>
            <param name="exception">
              The exception instance to which this method applies.
            </param>
            <param name="elementSeparator">
            The separator used between element of the chain.
            </param>
            <returns>
            A string representation of all the stack of exceptions raised.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.ExceptionExtensions.Chain(System.Exception)">
            <summary>
            Iterates the list of the exceptions formed by the innerException chain.
            </summary>
            <param name="exception">
            The exception instance to which this method applies.
            </param>
            <returns>
            An enumerable sequence of exception linked from the given one through its innerException chain.
            </returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.ExceptionExtensions.GetData(System.Exception,System.Object,System.Object)">
            <summary>
            Lookups inside the exception's Data dictionary searching for the given key and returns its associated value if found,
            or else returns the default value given.
            </summary>
            <param name="exception">
            The exception instance to which this method applies.
            </param>
            <param name="key">
            The value's identification key. (Best to use GUIDs for this to avoid ID clashes)
            </param>
            <param name="defaultValue">
            The default value in case the key is not found.
            </param>
            <returns>
            Either the value found in the data dictionary or the default value.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            When <paramref name="exception"/> == null.
            </exception>
        </member>
        <member name="M:Tenaris.Library.Framework.Utility.ExceptionExtensions.GetData``1(System.Exception,System.Object,``0)">
            <summary>
            Lookups inside the exception's Data dictionary searching for the given key and returns its associated value if found, 
            or else returns the default value given.
            </summary>
            <typeparam name="TValueType">
            The type to which the value is converted.
            </typeparam>
            <param name="exception">
            The exception instance to which this method applies.
            </param>
            <param name="key">
            The value's identification key. (Best to use GUIDs for this to avoid ID clashes)
            </param>
            <param name="defaultValue">
            The default value in case the key is not found.
            </param>
            <returns>
            Either the value found in the data dictionary or the default value.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            When <paramref name="exception"/> == null.
            </exception>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Attributes.XmlArrayItemValueAttribute">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlArrayItemValueAttribute.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="elementName"></param>
            <param name="attributeName"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlArrayItemValueAttribute.#ctor(System.String,System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="elementName"></param>
            <param name="attributeName"></param>
            <param name="type"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Attributes.XmlArrayItemValueAttribute.AttributeName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Attributes.XmlAttributeValueAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlAttributeValueAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="attName"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlAttributeValueAttribute.#ctor(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="attName"></param>
            <param name="type"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Attributes.XmlContentAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Attributes.XmlDateTimeFormatAttribute">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlDateTimeFormatAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="format"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Attributes.XmlDateTimeFormatAttribute.Format">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Attributes.XmlDictionaryItemElementAttribute">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlDictionaryItemElementAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlDictionaryItemElementAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="elementName"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Attributes.XmlDictionaryItemElementAttribute.ElementName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Attributes.XmlDictionaryKeyAttributeAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlDictionaryKeyAttributeAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="attributeName"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlDictionaryKeyAttributeAttribute.#ctor(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="attributeName"></param>
            <param name="elementType"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Attributes.XmlDictionaryKeyElementAttribute">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlDictionaryKeyElementAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlDictionaryKeyElementAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="elemName"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlDictionaryKeyElementAttribute.#ctor(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="elemName"></param>
            <param name="elementType"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Attributes.XmlDictionaryValueAttributeAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlDictionaryValueAttributeAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="attributeName"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlDictionaryValueAttributeAttribute.#ctor(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="attributeName"></param>
            <param name="elementType"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Attributes.XmlDictionaryValueElementAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlDictionaryValueElementAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlDictionaryValueElementAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="elementName"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlDictionaryValueElementAttribute.#ctor(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="elementName"></param>
            <param name="elementType"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Attributes.XmlElementValueAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Attributes.XmlElementValueAttribute.AttributeName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Attributes.XmlInlineArrayAttributeAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlInlineArrayAttributeAttribute.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeName"></param>
            <param name="itemSeparator"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlInlineArrayAttributeAttribute.#ctor(System.String,System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="attributeName"></param>
            <param name="arrayType"></param>
            <param name="itemSeparator"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Attributes.XmlInlineArrayAttributeAttribute.ItemSeparator">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Attributes.XmlInlineArrayElementAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlInlineArrayElementAttribute.#ctor(System.String,System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="itemElementName"></param>
            <param name="type"></param>
            <param name="itemSeparator"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Attributes.XmlInlineArrayElementAttribute.ItemSeparator">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Attributes.XmlNumericFormatAttribute">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlNumericFormatAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="format"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Attributes.XmlNumericFormatAttribute.Format">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Attributes.XmlOrderAttribute">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlOrderAttribute.#ctor(System.Single)">
            <summary>
            
            </summary>
            <param name="order"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Attributes.XmlOrderAttribute.Order">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Attributes.XmlTimeSpanFormatAttribute">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Attributes.XmlTimeSpanFormatAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="format"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Attributes.XmlTimeSpanFormatAttribute.Format">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Converters.ArrayConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Converters.ConverterBase">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.IXmlConverter">
            <summary>
            Define the interface for XmlConverter
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.IXmlConverter.FromXml(System.Object,Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor,System.Type,System.Xml.XmlReader,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="metadata"></param>
            <param name="entityType"></param>
            <param name="reader"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.IXmlConverter.Register(Tenaris.Library.Framework.Xml.IXmlContextData)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.IXmlConverter.ToXml(System.Object,Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor,System.Object,System.Xml.XmlTextWriter,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="metadata"></param>
            <param name="entity"></param>
            <param name="writer"></param>
            <param name="context"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.ConverterBase.TypeToString(System.Type,Tenaris.Library.Framework.Xml.TypeFormatInfo)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="settings"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.ConverterBase.WriteTypeDefinition(Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor,System.Type,Tenaris.Library.Framework.Xml.XmlSerializerContext,System.Xml.XmlTextWriter)">
            <summary>
            
            </summary>
            <param name="propDesc"></param>
            <param name="entityType"></param>
            <param name="context"></param>
            <param name="writer"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.ConverterBase.GetEntityTypeForElement(Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor,System.Xml.XmlReader,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="propDesc"></param>
            <param name="reader"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.ArrayConverter.Register(Tenaris.Library.Framework.Xml.IXmlContextData)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.ArrayConverter.FromXml(System.Object,Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor,System.Type,System.Xml.XmlReader,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="metadata"></param>
            <param name="entityType"></param>
            <param name="reader"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.ConfigurationSectionConverter.DoFromXml(System.Object,Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor,System.Type,System.Xml.XmlReader,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="metadata"></param>
            <param name="entityType"></param>
            <param name="reader"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.ConfigurationSectionConverter.DoToXml(System.Object,Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor,System.Object,System.Xml.XmlTextWriter,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="metadata"></param>
            <param name="entity"></param>
            <param name="writer"></param>
            <param name="context"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Converters.ValueTypeConverter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.ValueTypeConverter.DoFromXml(System.Object,Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor,System.Type,System.Xml.XmlReader,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="metadata"></param>
            <param name="entityType"></param>
            <param name="reader"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Converters.IDictionaryConverter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.IDictionaryConverter.DoFromXml(System.Object,Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor,System.Type,System.Xml.XmlReader,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="propDesc"></param>
            <param name="entityType"></param>
            <param name="reader"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.IDictionaryConverter.DoToNullValueXml(System.Object,Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor,System.Xml.XmlTextWriter,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="metadata"></param>
            <param name="writer"></param>
            <param name="context"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Converters.IListConverter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.IListConverter.Register(Tenaris.Library.Framework.Xml.IXmlContextData)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.IListConverter.CreateOutputFrom(Tenaris.Library.Framework.Xml.Metadata.ListPropertyDescriptor,System.Collections.IList,System.Type)">
            <summary>
            
            </summary>
            <param name="metadata"></param>
            <param name="items"></param>
            <param name="itemType"></param>
            <returns></returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Converters.IXmlSerializableConverter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.IXmlSerializableConverter.DoFromXml(System.Object,Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor,System.Type,System.Xml.XmlReader,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="metadata"></param>
            <param name="entityType"></param>
            <param name="reader"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.IXmlSerializableConverter.Register(Tenaris.Library.Framework.Xml.IXmlContextData)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.IXmlSerializableConverter.DoToXml(System.Object,Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor,System.Object,System.Xml.XmlTextWriter,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="metadata"></param>
            <param name="entity"></param>
            <param name="writer"></param>
            <param name="context"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Converters.ObjectConverter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.ObjectConverter.Register(Tenaris.Library.Framework.Xml.IXmlContextData)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.ObjectConverter.DoFromXml(System.Object,Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor,System.Type,System.Xml.XmlReader,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="metadata"></param>
            <param name="entityType"></param>
            <param name="reader"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Converters.RealNumberConverter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.RealNumberConverter.Register(Tenaris.Library.Framework.Xml.IXmlContextData)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.RealNumberConverter.GetValueAsString(Tenaris.Library.Framework.Xml.Metadata.ValueTypePropertyDescriptor,System.Object,System.Type,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="metadata"></param>
            <param name="attValue"></param>
            <param name="type"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Converters.XmlDocumentConverter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.XmlDocumentConverter.DoFromXml(System.Object,Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor,System.Type,System.Xml.XmlReader,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="metadata"></param>
            <param name="entityType"></param>
            <param name="reader"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.XmlDocumentConverter.Register(Tenaris.Library.Framework.Xml.IXmlContextData)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Converters.XmlDocumentConverter.DoToXml(System.Object,Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor,System.Object,System.Xml.XmlTextWriter,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="parent"></param>
            <param name="metadata"></param>
            <param name="entity"></param>
            <param name="writer"></param>
            <param name="context"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Exceptions.XmlDataSerializerException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Exceptions.XmlDataSerializerException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Exceptions.XmlDataSerializerException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Exceptions.XmlDataSerializerException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="inner"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Exceptions.XmlDataSerializerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Exceptions.XmlDataSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Exceptions.XmlDataSerializerExceptionFactory">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Helpers.VisibilityPropertyType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.VisibilityPropertyType.Public">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.VisibilityPropertyType.NonPublic">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.VisibilityPropertyType.PublicAndNonPublic">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Helpers.TypeHelper">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._configurationSectionType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper.__mscorlib">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._byte">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._sbyte">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._short">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._int">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._long">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._ushort">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._uint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._ulong">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._float">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._double">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._bool">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._char">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._decimal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._dateTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._timeSpan">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._guid">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._objectType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._boolType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._charType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._byteType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._sbyteType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._shortType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._intType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._longType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._ushortType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._uintType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._ulongType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._floatType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._doubleType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._decimalType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._stringType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._dateTimeType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._guidType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._timeSpanType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._typeType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._typeTypeType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper._dateTimeOffsetType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Helpers.TypeHelper.__interfaceXmlSerializableType">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Helpers.TypeHelper.IsSerializable(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Helpers.TypeHelper.IsDefaultValue(System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Helpers.TypeHelper.IsValueType(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Helpers.TypeHelper.IsCollectionType(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Helpers.TypeHelper.IsListType(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Helpers.TypeHelper.IsDictionaryType(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Helpers.TypeHelper.IsNullableType(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Helpers.TypeHelper.GetNullableType(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Helpers.TypeHelper.GetFullClassName(System.Type)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Helpers.TypeHelper.GetGetProperties(System.Type,Tenaris.Library.Framework.Xml.Helpers.VisibilityPropertyType,System.Boolean)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="getVisibility"></param>
            <param name="onlyValueType"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Helpers.TypeHelper.GetSetProperties(System.Type,Tenaris.Library.Framework.Xml.Helpers.VisibilityPropertyType,System.Boolean)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="setVisibility"></param>
            <param name="onlyValueType"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Helpers.TypeHelper.GetProperties(System.Type,Tenaris.Library.Framework.Xml.Helpers.VisibilityPropertyType,Tenaris.Library.Framework.Xml.Helpers.VisibilityPropertyType,System.Boolean)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="getVisibility"></param>
            <param name="setVisibility"></param>
            <param name="onlyValueType"></param>
            <returns></returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Helpers.XmlHelper">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Helpers.XmlHelper.GetElementName(System.String)">
            <summary>
            
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Helpers.XmlHelper.GetElementNameFromFile(System.String)">
            <summary>
            
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.IXmlContextData">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.IXmlContextData.RegisterConverter(System.Type,Tenaris.Library.Framework.Xml.IXmlConverter)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="converter"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.IXmlContextData.RegisterAlias(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="alias"></param>
            <param name="type"></param>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Metadata.DictionaryKeyValuePropertyDescriptor">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor.#ctor(Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor.GetTypeFromAttributeName(System.String,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            Devuelve el tipo de la propiedad serializado.
            </summary>
            <param name="elementName"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor.GetTypeFromElementName(System.String,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="elementName"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor.MustDeclareTypeNameInXmlElement(System.Type,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            Devuelve un booleano que indica si debe escribir el tipo 
            </summary>
            <param name="propertyEntityType"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor.Metadata">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor.UseAlias">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.DictionaryKeyValuePropertyDescriptor.#ctor(Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata)">
            <summary>
            
            </summary>
            <param name="metadata"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.DictionaryKeyValuePropertyDescriptor.DoMustDeclareTypeNameInXmlElement(System.Type,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.DictionaryKeyValuePropertyDescriptor.GetElementNameForType(System.Type,Tenaris.Library.Framework.Xml.XmlSerializerContext,System.Boolean)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="context"></param>
            <param name="isNullReturnDefault"></param>
            <returns></returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Metadata.DictionaryItemKeyPropertyMetadata">
            <summary>
            Define 
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.EmptyAliasToTypeMap">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.EmptyTypeToAliasMap">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.EmptyAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.EmptyIncludeTypes">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.InitializeAttribute(System.Attribute)">
            <summary>
            Devuelve un booleano indicando que el atributo es de serializacion en xml
            </summary>
            <param name="att"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AddAttribute(System.Attribute)">
            <summary>
            
            </summary>
            <param name="att"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AddIncludeTypes(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AddTypeToElementMap(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="element"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AddElementToTypeMap(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="type"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AddTypeToAttributeMap(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="attribute"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AddAttributeToTypeMap(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="attribute"></param>
            <param name="type"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AddTypeToElementItemMap(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="element"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AddElementToTypeItemMap(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="type"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AddTypeToAttributeItemMap(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="attribute"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AddAttributeToTypeItemMap(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="attribute"></param>
            <param name="type"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AddTypeToElementDictionaryKeyMap(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="element"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AddElementToTypeDictionaryKeyMap(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="type"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AddTypeToAttributeDictionaryKeyMap(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="element"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AddAttributeToTypeDictionaryKeyMap(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="type"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AddTypeToElementDictionaryValueMap(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="element"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AddElementToTypeDictionaryValueMap(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="type"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AddTypeToAttributeDictionaryValueMap(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="element"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AddAttributeToTypeDictionaryValueMap(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="type"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.GetValue(System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.SetValue(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="value"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.IsSerializable">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.Order">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.Attributes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.IncludeTypes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.PropertyInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.OwnerType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.PropertyType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.PropertyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.DefaultElementName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.TypeToElementMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.ElementToTypeMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.DefaultAttributeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.TypeToAttributeMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AttributeToTypeMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.DefaultItemElementName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.TypeToElementItemMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.ElementToTypeItemMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.DefaulItemAttributeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.TypeToAttributeItemMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AttributeToTypeItemMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.DictionaryItemElementName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.DefaultDictionaryKeyElementName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.TypeToElementDictionaryKeyMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.ElementToTypeDictionaryKeyMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.DefaultDictionaryKeyAttributeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.TypeToAttributeDictionaryKeyMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AttributeToTypeDictionaryKeyMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.DefaultDictionaryValueElementName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.TypeToElementDictionaryValueMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.ElementToTypeDictionaryValueMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.DefaultDictionaryValueAttributeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.TypeToAttributDictionaryValueMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata.AttributeToTypeDictionaryValueMap">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator.#ctor(Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata)">
            <summary>
            
            </summary>
            <param name="deco"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator.Decoratee">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator.Order">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator.OwnerType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator.PropertyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator.PropertyType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator.Attributes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator.IncludeTypes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator.TypeToElementMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator.ElementToTypeMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator.TypeToAttributeMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator.AttributeToTypeMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator.DefaultItemElementName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator.TypeToElementItemMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator.ElementToTypeItemMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator.DefaulItemAttributeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator.TypeToAttributeItemMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.PropertyMetadataDecorator.AttributeToTypeItemMap">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.DictionaryItemKeyPropertyMetadata.#ctor(System.String,System.Type,Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
            <param name="itemValueType"></param>
            <param name="deco"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.DictionaryItemKeyPropertyMetadata.OwnerType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.DictionaryItemKeyPropertyMetadata.PropertyType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.DictionaryItemKeyPropertyMetadata.PropertyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.DictionaryItemKeyPropertyMetadata.DefaultElementName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.DictionaryItemKeyPropertyMetadata.TypeToElementMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.DictionaryItemKeyPropertyMetadata.ElementToTypeMap">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Metadata.DictionaryPropertyDescriptor">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Metadata.ObjectPropertyDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ObjectPropertyDescriptor.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ObjectPropertyDescriptor.#ctor(Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ObjectPropertyDescriptor.DoMustDeclareTypeNameInXmlElement(System.Type,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ObjectPropertyDescriptor.GetAttributeNameForType(System.Type,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.DictionaryPropertyDescriptor.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.DictionaryPropertyDescriptor.#ctor(Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.DictionaryPropertyDescriptor.GetDictionaryItemKeyPropertyDescriptor(Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Metadata.ListItemPropertyDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ListItemPropertyDescriptor.#ctor(Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata)">
            <summary>
            
            </summary>
            <param name="metadata"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ListItemPropertyDescriptor.DoMustDeclareTypeNameInXmlElement(System.Type,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ListItemPropertyDescriptor.GetAttributeNameForType(System.Type,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ListItemPropertyDescriptor.GetElementNameForType(System.Type,Tenaris.Library.Framework.Xml.XmlSerializerContext,System.Boolean)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="context"></param>
            <param name="isNullReturnDefault"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ListItemPropertyDescriptor.GetPropertyDescriptor``1(System.Type,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <typeparam name="TPropertyDescriptor"></typeparam>
            <param name="entityType"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Metadata.ListItemPropertyMetadata">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ListItemPropertyMetadata.#ctor(System.String,System.Type,System.Boolean,Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
            <param name="itemType"></param>
            <param name="isInline"></param>
            <param name="deco"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.ListItemPropertyMetadata.OwnerType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.ListItemPropertyMetadata.PropertyType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.ListItemPropertyMetadata.PropertyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.ListItemPropertyMetadata.DefaultElementName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.ListItemPropertyMetadata.TypeToElementMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.ListItemPropertyMetadata.ElementToTypeMap">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Metadata.ListPropertyDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ListPropertyDescriptor.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ListPropertyDescriptor.#ctor(Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ListPropertyDescriptor.IsInlineAttributeArray(System.Type,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ListPropertyDescriptor.IsInlineElementArray(System.Type,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ListPropertyDescriptor.GetInlineItemSeparator(System.Type,Tenaris.Library.Framework.Xml.XmlSerializerContext,System.Boolean)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="context"></param>
            <param name="isAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ListPropertyDescriptor.GetItemPropertyDescriptor(Tenaris.Library.Framework.Xml.XmlSerializerContext,System.Boolean)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="isInline"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ListPropertyDescriptor.DoMustDeclareTypeNameInXmlElement(System.Type,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ListPropertyDescriptor.GetAttributeNameForType(System.Type,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="propertyEntityType"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.ListPropertyDescriptor.DefaultItemAlias">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.ListPropertyDescriptor.DeclaringItemType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Metadata.RootPropertyMetadata">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.RootPropertyMetadata.#ctor(System.String,System.String,Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata)">
            <summary>
            
            </summary>
            <param name="elementName"></param>
            <param name="attributeName"></param>
            <param name="deco"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.RootPropertyMetadata.DefaultElementName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.RootPropertyMetadata.DefaultAttributeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.RootPropertyMetadata.PropertyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.RootPropertyMetadata.PropertyType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Metadata.TypeDescriptor">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.TypeDescriptor.#ctor(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.TypeDescriptor.IsArray">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.TypeDescriptor.IsList">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.TypeDescriptor.IsDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.TypeDescriptor.IsValueType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.Metadata.ValueTypePropertyDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ValueTypePropertyDescriptor.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ValueTypePropertyDescriptor.#ctor(Tenaris.Library.Framework.Xml.Metadata.PropertyMetadata)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ValueTypePropertyDescriptor.DoMustDeclareTypeNameInXmlElement(System.Type,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ValueTypePropertyDescriptor.GetAttributeNameForType(System.Type,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.Metadata.ValueTypePropertyDescriptor.GetTypeFromAttributeName(System.String,Tenaris.Library.Framework.Xml.XmlSerializerContext)">
            <summary>
            
            </summary>
            <param name="attributeName"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.ValueTypePropertyDescriptor.IsXmlContentText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.ValueTypePropertyDescriptor.DateTimeFormat">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.ValueTypePropertyDescriptor.TimeSpanFormat">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.Metadata.ValueTypePropertyDescriptor.NumberFormat">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.ObjectHolder`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.ObjectHolder`1.PropertyInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.ObjectHolder`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.ObjectHolder`1.#ctor(`0)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.ObjectHolder`1.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.WriteTypeDefinitionMode">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.XmlDataSerializer">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlDataSerializer.Serialize(System.Xml.XmlTextWriter,System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="entity"></param>
            <param name="rootElementName"></param>
            <param name="declareRootType">Indica si debe resgitrar el tipo del objeto como atributo del elemento Root. Si es true, lo registra si no hay un alias definido, sino, no lo registra.</param>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.XmlSerializerContext">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.XmlSerializerContext.KnowAliasMap">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.XmlSerializerContext.KnowAliasReverseMap">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.XmlSerializerContext.ConverterMap">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.XmlSerializerContext.TypeDescriptorMap">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerContext.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerContext.GetConverter(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerContext.RegisterConverter(System.Type,Tenaris.Library.Framework.Xml.IXmlConverter)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="converter"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerContext.AddConverter(Tenaris.Library.Framework.Xml.IXmlConverter)">
            <summary>
            
            </summary>
            <param name="converter"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerContext.GetTypeDescriptor(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerContext.RegisterType(Tenaris.Library.Framework.Xml.Metadata.TypeDescriptor)">
            <summary>
            
            </summary>
            <param name="desc"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerContext.RegisterAlias(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="alias"></param>
            <param name="type"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerContext.MustDeclareRootTypeName(System.Type)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerContext.IsRootElement(Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor)">
            <summary>
            
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerContext.Settings">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerContext.Stack">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerContext.ObjectConverter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerContext.GlobalConverterMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerContext.LocalConverterMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerContext.GlobalTypeDescriptorMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerContext.LocalTypeDescriptorMap">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.XmlSerializerContextStack">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerContextStack.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerContextStack.TypeDescriptorMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerContextStack.ConverterMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerContextStack.AliasMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerContextStack.ReverseAliasMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerContextStack.Instancies">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerContextStack.InstanciesSequence">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerContextStack.InstanceCounter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.XmlSerializerSettings">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.XmlSerializerSettings.ObjectReferenceAttributeName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Tenaris.Library.Framework.Xml.XmlSerializerSettings.ObjectIdAttributeName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerSettings.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerSettings.AddIncludeDeserializationElementFilter(System.Int32,Tenaris.Library.Framework.Text.WildcardPattern)">
            <summary>
            
            </summary>
            <param name="level"></param>
            <param name="pattern"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerSettings.GetIncludeDeserializationElementFilters(System.Int32)">
            <summary>
            
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerSettings.ClearIncludeDeserializationElementFilter(System.Int32)">
            <summary>
            
            </summary>
            <param name="level"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerSettings.ClearIncludeDeserializationElementFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerSettings.ContainsIncludeDeserializationElementFilter(System.Int32)">
            <summary>
            
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerSettings.AddExcludeDeserializationElementFilter(System.Int32,Tenaris.Library.Framework.Text.WildcardPattern)">
            <summary>
            
            </summary>
            <param name="level"></param>
            <param name="pattern"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerSettings.GetExcludeDeserializationElementFilters(System.Int32)">
            <summary>
            
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerSettings.ClearExcludeDeserializationElementFilter(System.Int32)">
            <summary>
            
            </summary>
            <param name="level"></param>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerSettings.ClearExcludeDeserializationElementFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerSettings.ContainsExcludeDeserializationElementFilter(System.Int32)">
            <summary>
            
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.XmlSerializerSettings.AddExcludeSerializationProperty(System.Type,Tenaris.Library.Framework.Text.WildcardPattern)">
            <summary>
            
            </summary>
            <param name="ownerType"></param>
            <param name="filter"></param>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerSettings.TypeSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerSettings.WriteRootTypeDefinition">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerSettings.WriteNullValues">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerSettings.IgnoreUnknowTypes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerSettings.DefaultDateTimeFormat">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerSettings.DefaultTimeSpanFormat">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerSettings.DefaultNumberFormat">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerSettings.DefaultInlineListItemSeparator">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerSettings.EnumAsString">
            <summary>
            Indica si los enums se serializan como string o como su valor númerico.
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerSettings.AddNullValueInLists">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerSettings.UniqueSerializationForInstance">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.XmlSerializerSettings.ExcludeSerializationPropertyFilters">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tenaris.Library.Framework.Xml.PropertyFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tenaris.Library.Framework.Xml.PropertyFilter.Match(System.Object,Tenaris.Library.Framework.Xml.Metadata.PropertyDescriptor)">
            <summary>
            
            </summary>
            <param name="owner"></param>
            <param name="prop"></param>
            <returns></returns>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.PropertyFilter.PropertyOwnerType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.PropertyFilter.Pattern">
            <summary>
            
            </summary>
        </member>
        <member name="P:Tenaris.Library.Framework.Xml.TypeFormatInfo.AttributeTypeName">
            <summary>
            Nombre del attributo que define el tipo del objecto. Por default es def-type
            </summary>
        </member>
    </members>
</doc>
